<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Land Ocean Temp&quot;'>
        <calculation class='tableau' formula='&quot;Land Ocean Temp&quot;' />
        <members>
          <member value='&quot;Land Ocean Temp&quot;' />
          <member value='&quot;Land Temp&quot;' />
          <member value='&quot;Land Max Temp&quot;' />
          <member value='&quot;Land Min Temp&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='GroupProject_3' inline='true' name='federated.0ps0pa30doqhx410vvy640sxei51' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0jcm6010llrjtf142as770suivqn'>
            <connection authentication='username-password' class='postgres' dbname='GroupProject3' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='testuser' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0jcm6010llrjtf142as770suivqn' name='Custom SQL Query' type='text'>select &#13;&#10;Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1960-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1960 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1960 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10;select &#13;&#10;Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1961-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1961 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1961 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10;&#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1962-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1962 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1962 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10;select &#13;&#10;Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1963-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1963 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1963 is not null&#13;&#10;&#13;&#10; union&#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1964-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1964 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1964 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10;select &#13;&#10;Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1965-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1965 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1965 is not null&#13;&#10;&#13;&#10;union&#13;&#10;select &#13;&#10;Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1966-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1966 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1966 is not null&#13;&#10; &#13;&#10; union&#13;&#10; &#13;&#10;select &#13;&#10;Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1967-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1967 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1967 is not null&#13;&#10;&#13;&#10; union&#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1968-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1968 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1968 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10;select &#13;&#10;Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1969-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1969 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1969 is not null&#13;&#10;&#13;&#10; &#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10;select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1970-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1970 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1970 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1971-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1971 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1971 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1972-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1972 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1972 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1973-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1973 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1973 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1974-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1974 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1974 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1975-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1975 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1975 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1976-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1976 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1976 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1977-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1977 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1977 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1978-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1978 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1978 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1979-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1979 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1979 is not null&#13;&#10; &#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1980-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1980 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1980 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1981-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1981 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1981 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1982-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1982 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1982 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1983-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1983 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1983 is not null&#13;&#10; &#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1984-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1984 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1984 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1985-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1985 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1985 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1986-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1986 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1986 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1987-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1987 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1977 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1988-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1988 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1988 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1989-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1989 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1989 is not null&#13;&#10; &#13;&#10; union&#13;&#10; &#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1990-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1990 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1990 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1991-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1991 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1991 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1992-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1992 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1992 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1993-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1993 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1993 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1994-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1994 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1994 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1995-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1995 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1995 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1996-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_1996 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1996 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1997-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1997 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1997 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1998-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1998 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1998 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;1999-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_1999 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_1999 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2000-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2000 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2000 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2001-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2001 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2001 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2002-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2002 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2002 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2003-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2003 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2003 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2004-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_2004 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2004 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2005-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2005 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2005 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2006-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_2006 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2006 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2007-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2007 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2007 is not null&#13;&#10; &#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2008-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2008 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2008 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2009-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2009 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2009 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2010-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_2010 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2010 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2011-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2011 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2011 is not null&#13;&#10; &#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2012-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2012 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2012 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2013-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2013 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2013 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2014-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10; Year_2014 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2014 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2015-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2015 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2015 is not null&#13;&#10;&#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2016-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2016 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2016 is not null&#13;&#10;&#13;&#10; union&#13;&#10;  select &#13;&#10;  Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2017-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2017 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2017 is not null&#13;&#10; &#13;&#10; union&#13;&#10; &#13;&#10; select &#13;&#10; Country_Name AS COUNTRY_NAME,&#13;&#10; CAST (&apos;2018-01-01&apos; AS DATE) AS EMMS_DT,&#13;&#10;Year_2018 AS CO2_EMMS&#13;&#10; from api_en_atm_co2e_pc_ds2_en_excel_v2_41937&#13;&#10; where year_2018 is not null&#13;&#10;&#13;&#10;&#13;&#10;order by emms_dt</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>250</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emms_dt</remote-name>
            <remote-type>7</remote-type>
            <local-name>[emms_dt]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>emms_dt</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_emms</remote-name>
            <remote-type>131</remote-type>
            <local-name>[co2_emms]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>co2_emms</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>27</precision>
            <scale>20</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Douglas/Documents/My Tableau Repository/Datasources/GroupProject_3.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/22/2019 12:03:32 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='GroupProject_3' increment-value='%null%' refresh-type='create' rows-inserted='12256' timestamp-start='2019-07-22 00:03:32.141' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_name</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>305</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emms_dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[emms_dt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emms_dt</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_emms</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_emms]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_emms</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11746</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.332632' measure-ordering='alphabetic' measure-percentage='0.414737' parameter-percentage='0.252632' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Custom SQL Query (GroupProject3) Extract' inline='true' name='federated.0xwkjt61hn2maf179lkg01b3b1j4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Custom SQL Query (GroupProject3)' name='hyper.0wqim8g1selrj31c9rjwm0khmxvz'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Douglas/Documents/DataBootCamp/GroupProject3/GroupProject3.twb Files/Data/Datasources/Custom SQL Query (GroupProject3).hyper' default-settings='yes' sslmode='' username='tableau_internal_user' />
          </named-connection>
        </named-connections>
        <relation connection='hyper.0wqim8g1selrj31c9rjwm0khmxvz' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <family>Custom SQL Query</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>54</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <family>Custom SQL Query</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>168</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>averagetemperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[averagetemperature]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>averagetemperature</remote-alias>
            <ordinal>2</ordinal>
            <family>Custom SQL Query</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1946</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_emms</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_emms]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>co2_emms</remote-alias>
            <ordinal>3</ordinal>
            <family>Custom SQL Query</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1345</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='INDEX' datatype='integer' name='[Calculation_-7493708291897221111]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Index' datatype='integer' name='[Calculation_-7493708291901382650]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Averagetemperature' datatype='real' name='[averagetemperature]' role='measure' type='quantitative' />
      <column caption='Co2 Emms' datatype='real' name='[co2_emms]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Year' datatype='real' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <group caption='Set 1' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='&quot;Afghanistan&quot;' function='range' level='[none:country:nk]' to='&quot;Zimbabwe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.241966' group-percentage='0.149338' measure-ordering='alphabetic' measure-percentage='0.457467' parameter-percentage='0.151229' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='globaltemperatures (GroupProject3)' inline='true' name='federated.0ljvzvw0r9ocy314po6zp1j2gtew' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.01pywtj0nacypv1beas2710k7q0o'>
            <connection authentication='username-password' class='postgres' dbname='GroupProject3' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='testuser' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.01pywtj0nacypv1beas2710k7q0o' name='globaltemperatures' table='[public].[globaltemperatures]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>7</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[globaltemperatures]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landaveragetemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landaveragetemperature]</local-name>
            <parent-name>[globaltemperatures]</parent-name>
            <remote-alias>landaveragetemperature</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landaveragetemperatureuncertainty</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landaveragetemperatureuncertainty]</local-name>
            <parent-name>[globaltemperatures]</parent-name>
            <remote-alias>landaveragetemperatureuncertainty</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landmaxtemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landmaxtemperature]</local-name>
            <parent-name>[globaltemperatures]</parent-name>
            <remote-alias>landmaxtemperature</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landmaxtemperatureuncertainty</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landmaxtemperatureuncertainty]</local-name>
            <parent-name>[globaltemperatures]</parent-name>
            <remote-alias>landmaxtemperatureuncertainty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landmintemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landmintemperature]</local-name>
            <parent-name>[globaltemperatures]</parent-name>
            <remote-alias>landmintemperature</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landmintemperatureuncertainty</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landmintemperatureuncertainty]</local-name>
            <parent-name>[globaltemperatures]</parent-name>
            <remote-alias>landmintemperatureuncertainty</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landandoceanaveragetemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landandoceanaveragetemperature]</local-name>
            <parent-name>[globaltemperatures]</parent-name>
            <remote-alias>landandoceanaveragetemperature</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landandoceanaveragetemperatureuncertainty</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landandoceanaveragetemperatureuncertainty]</local-name>
            <parent-name>[globaltemperatures]</parent-name>
            <remote-alias>landandoceanaveragetemperatureuncertainty</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='LandandoceanaveragetemperatureF' datatype='real' name='[Calculation_567453564363796481]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[landandoceanaveragetemperature] * 9/5 +32' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
      <column caption='Landandoceanaveragetemperature' datatype='real' name='[landandoceanaveragetemperature]' role='measure' type='quantitative' />
      <column caption='Landandoceanaveragetemperatureuncertainty' datatype='real' name='[landandoceanaveragetemperatureuncertainty]' role='measure' type='quantitative' />
      <column caption='Landaveragetemperature' datatype='real' name='[landaveragetemperature]' role='measure' type='quantitative' />
      <column caption='Landaveragetemperatureuncertainty' datatype='real' name='[landaveragetemperatureuncertainty]' role='measure' type='quantitative' />
      <column caption='Landmaxtemperature' datatype='real' name='[landmaxtemperature]' role='measure' type='quantitative' />
      <column caption='Landmaxtemperatureuncertainty' datatype='real' name='[landmaxtemperatureuncertainty]' role='measure' type='quantitative' />
      <column caption='Landmintemperature' datatype='real' name='[landmintemperature]' role='measure' type='quantitative' />
      <column caption='Landmintemperatureuncertainty' datatype='real' name='[landmintemperatureuncertainty]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Douglas/Downloads/PJ3_Viz.twb Files/Data/Datasources/globaltemperatures (GroupProject3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>0</ordinal>
              <family>globaltemperatures</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3192</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landaveragetemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landaveragetemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landaveragetemperature</remote-alias>
              <ordinal>1</ordinal>
              <family>globaltemperatures</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1919</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landaveragetemperatureuncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landaveragetemperatureuncertainty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landaveragetemperatureuncertainty</remote-alias>
              <ordinal>2</ordinal>
              <family>globaltemperatures</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1181</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landmaxtemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landmaxtemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landmaxtemperature</remote-alias>
              <ordinal>3</ordinal>
              <family>globaltemperatures</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1418</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landmaxtemperatureuncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landmaxtemperatureuncertainty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landmaxtemperatureuncertainty</remote-alias>
              <ordinal>4</ordinal>
              <family>globaltemperatures</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>650</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landmintemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landmintemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landmintemperature</remote-alias>
              <ordinal>5</ordinal>
              <family>globaltemperatures</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1483</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landmintemperatureuncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landmintemperatureuncertainty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landmintemperatureuncertainty</remote-alias>
              <ordinal>6</ordinal>
              <family>globaltemperatures</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>636</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landandoceanaveragetemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landandoceanaveragetemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landandoceanaveragetemperature</remote-alias>
              <ordinal>7</ordinal>
              <family>globaltemperatures</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1167</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landandoceanaveragetemperatureuncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landandoceanaveragetemperatureuncertainty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landandoceanaveragetemperatureuncertainty</remote-alias>
              <ordinal>8</ordinal>
              <family>globaltemperatures</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>269</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.221053' measure-ordering='alphabetic' measure-percentage='0.597895' parameter-percentage='0.181053' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
    </datasource>
    <datasource caption='Custom SQL Query (GroupProject3)' inline='true' name='federated.1sdpt831md1cyp16vp6yb0w2mqka' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0qhr8t009a5y3t11g64ob0f28o2d'>
            <connection authentication='username-password' class='postgres' dbname='GroupProject3' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='testuser' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0qhr8t009a5y3t11g64ob0f28o2d' name='Custom SQL Query' type='text'>SELECT &#13;&#10;EXTRACT(YEAR FROM dt) as year,&#13;&#10;country,&#13;&#10;city,&#13;&#10;latitude,&#13;&#10;longitude,&#13;&#10;MAX(averagetemperature) AS maxaveragetemperature,&#13;&#10;MIN(averagetemperature) AS minaveragetemperature,&#13;&#10;MAX(averagetemperature) - MIN(averagetemperature) mx_min_diff&#13;&#10;FROM public.globallandtemperaturesbycity&#13;&#10;WHERE averagetemperature IS NOT NULL&#13;&#10;GROUP BY EXTRACT(YEAR FROM dt),&#13;&#10;country,&#13;&#10;city,&#13;&#10;latitude,&#13;&#10;longitude</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>5</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>250</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>250</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>130</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>250</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>130</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>250</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>maxaveragetemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[maxaveragetemperature]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>maxaveragetemperature</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>minaveragetemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[minaveragetemperature]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>minaveragetemperature</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mx_min_diff</remote-name>
            <remote-type>131</remote-type>
            <local-name>[mx_min_diff]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>mx_min_diff</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='real' name='[year]' role='dimension' type='ordinal' />
      <drill-paths>
        <drill-path name='country, city'>
          <field>[country]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Douglas/Downloads/PJ3_Viz.twb Files/Data/Datasources 1/Custom SQL Query (GroupProject3).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/16/2019 10:17:50 PM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Custom SQL Query (GroupProject3)' increment-value='%null%' refresh-type='create' rows-inserted='693249' timestamp-start='2019-07-16 22:17:50.005' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>5</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>363</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>383</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18168</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>96</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>4</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4492</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>maxaveragetemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[maxaveragetemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>maxaveragetemperature</remote-alias>
              <ordinal>5</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>91924</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>minaveragetemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[minaveragetemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>minaveragetemperature</remote-alias>
              <ordinal>6</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>121438</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>mx_min_diff</remote-name>
              <remote-type>5</remote-type>
              <local-name>[mx_min_diff]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mx_min_diff</remote-alias>
              <ordinal>7</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>123832</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.36255' measure-ordering='alphabetic' measure-percentage='0.442231' parameter-percentage='0.195219' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='GroupProject_3 (2)' inline='true' name='federated.12kvczq1r6v2wd18669ba1w1aqhz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0l45maa1pkhp1u1bi6mu81aims1f'>
            <connection authentication='username-password' class='postgres' dbname='GroupProject3' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='testuser' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0l45maa1pkhp1u1bi6mu81aims1f' name='Custom SQL Query' type='text'>SELECT *&#13;&#10;from globaltemperatures&#13;&#10;where dt &gt;&gt;CAST(&apos;1850-01-01&apos; AS date)</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>dt</remote-name>
            <remote-type>7</remote-type>
            <local-name>[dt]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>dt</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landaveragetemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landaveragetemperature]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>landaveragetemperature</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landaveragetemperatureuncertainty</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landaveragetemperatureuncertainty]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>landaveragetemperatureuncertainty</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landmaxtemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landmaxtemperature]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>landmaxtemperature</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landmaxtemperatureuncertainty</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landmaxtemperatureuncertainty]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>landmaxtemperatureuncertainty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landmintemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landmintemperature]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>landmintemperature</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landmintemperatureuncertainty</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landmintemperatureuncertainty]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>landmintemperatureuncertainty</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landandoceanaveragetemperature</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landandoceanaveragetemperature]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>landandoceanaveragetemperature</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>landandoceanaveragetemperatureuncertainty</remote-name>
            <remote-type>131</remote-type>
            <local-name>[landandoceanaveragetemperatureuncertainty]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>landandoceanaveragetemperatureuncertainty</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <scale>8</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ViewFilter' datatype='string' name='[Calculation_1090997022849552393]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='real' name='[landandoceanaveragetemperature]' role='measure' type='quantitative' />
      <column datatype='real' name='[landandoceanaveragetemperatureuncertainty]' role='measure' type='quantitative' />
      <column datatype='real' name='[landaveragetemperature]' role='measure' type='quantitative' />
      <column datatype='real' name='[landaveragetemperatureuncertainty]' role='measure' type='quantitative' />
      <column datatype='real' name='[landmintemperature]' role='measure' type='quantitative' />
      <column datatype='real' name='[landmintemperatureuncertainty]' role='measure' type='quantitative' />
      <column-instance column='[landandoceanaveragetemperature]' derivation='Avg' name='[avg:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landandoceanaveragetemperatureuncertainty]' derivation='Avg' name='[avg:landandoceanaveragetemperatureuncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landaveragetemperature]' derivation='Avg' name='[avg:landaveragetemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landaveragetemperatureuncertainty]' derivation='Avg' name='[avg:landaveragetemperatureuncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landandoceanaveragetemperature]' derivation='None' name='[none:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landandoceanaveragetemperatureuncertainty]' derivation='None' name='[none:landandoceanaveragetemperatureuncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landandoceanaveragetemperature]' derivation='Sum' name='[sum:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landandoceanaveragetemperatureuncertainty]' derivation='Sum' name='[sum:landandoceanaveragetemperatureuncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landaveragetemperature]' derivation='Sum' name='[sum:landaveragetemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landaveragetemperatureuncertainty]' derivation='Sum' name='[sum:landaveragetemperatureuncertainty:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landmintemperature]' derivation='Sum' name='[sum:landmintemperature:qk]' pivot='key' type='quantitative' />
      <column-instance column='[landmintemperatureuncertainty]' derivation='Sum' name='[sum:landmintemperatureuncertainty:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='country, city' />
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Douglas/Documents/My Tableau Repository/Datasources/GroupProject_3 (2).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/22/2019 12:05:40 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='GroupProject_3 (2)' increment-value='%null%' refresh-type='create' rows-inserted='1991' timestamp-start='2019-07-22 00:05:40.471' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[dt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dt</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1991</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landaveragetemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landaveragetemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landaveragetemperature</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1434</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landaveragetemperatureuncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landaveragetemperatureuncertainty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landaveragetemperatureuncertainty</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>562</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landmaxtemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landmaxtemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landmaxtemperature</remote-alias>
              <ordinal>3</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1395</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landmaxtemperatureuncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landmaxtemperatureuncertainty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landmaxtemperatureuncertainty</remote-alias>
              <ordinal>4</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>693</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landmintemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landmintemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landmintemperature</remote-alias>
              <ordinal>5</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1434</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landmintemperatureuncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landmintemperatureuncertainty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landmintemperatureuncertainty</remote-alias>
              <ordinal>6</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>653</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landandoceanaveragetemperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landandoceanaveragetemperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landandoceanaveragetemperature</remote-alias>
              <ordinal>7</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1252</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>landandoceanaveragetemperatureuncertainty</remote-name>
              <remote-type>5</remote-type>
              <local-name>[landandoceanaveragetemperatureuncertainty]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>landandoceanaveragetemperatureuncertainty</remote-alias>
              <ordinal>8</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>275</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.452191' measure-ordering='alphabetic' measure-percentage='0.406375' parameter-percentage='0.141434' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landandoceanaveragetemperature:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperature:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landandoceanaveragetemperature:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landmintemperature:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landaveragetemperatureuncertainty:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperatureuncertainty:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landaveragetemperature:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landandoceanaveragetemperatureuncertainty:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperatureuncertainty:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landandoceanaveragetemperatureuncertainty:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landmintemperatureuncertainty:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Land Ocean Temp&quot;'>
          <calculation class='tableau' formula='&quot;Land Ocean Temp&quot;' />
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='api_en_atm_co2e_pc_ds2_en_excel_v2_41937 (GroupProject_3)' inline='true' name='federated.0g3jnxy07yemax1f577m402zkbji' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='postgres.0x6t8uj118x2di1d1nsiz11ppy2u'>
            <connection authentication='username-password' class='postgres' dbname='GroupProject3' odbc-native-protocol='' one-time-sql='' port='5432' server='localhost' username='testuser' />
          </named-connection>
        </named-connections>
        <relation connection='postgres.0x6t8uj118x2di1d1nsiz11ppy2u' name='Custom SQL Query' type='text'>select &#13;&#10; COUNTRY_NAME,&#13;&#10; EMMS_DT,&#13;&#10; CO2_EMMS&#13;&#10; from CO2_EMMS_VIEW</relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>250</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>emms_dt</remote-name>
            <remote-type>7</remote-type>
            <local-name>[emms_dt]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>emms_dt</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_emms</remote-name>
            <remote-type>131</remote-type>
            <local-name>[co2_emms]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>co2_emms</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>28</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Co2 Emms' datatype='real' name='[co2_emms]' role='measure' type='quantitative' />
      <column datatype='string' name='[country_name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[country_name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Bahrain, Kuwait, Qatar and 2 more&quot;'>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Emms Dt' datatype='date' name='[emms_dt]' role='dimension' type='ordinal' />
      <column-instance column='[Bottom 10 Years of co2 emm]' derivation='InOut' name='[io:Bottom 10 Years of co2 emm:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 10 Years of co2 emm]' derivation='InOut' name='[io:Top 10 Years of co2 emm:nk]' pivot='key' type='nominal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[co2_emms]' derivation='Sum' name='[sum:co2_emms:qk]' pivot='key' type='quantitative' />
      <column-instance column='[emms_dt]' derivation='Year' name='[yr:emms_dt:ok]' pivot='key' type='ordinal' />
      <group caption='Bottom 10 Years of co2 emm' name='[Bottom 10 Years of co2 emm]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([co2_emms])' function='order' user:ui-marker='order'>
            <groupfilter from='1960' function='range' level='[yr:emms_dt:ok]' to='2014' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 5 Yrs for 5 Countries' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([co2_emms])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[emms_dt]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 Years of co2 emm' name='[Top 10 Years of co2 emm]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([co2_emms])' function='order' user:ui-marker='order'>
            <groupfilter from='1960' function='range' level='[yr:emms_dt:ok]' to='2018' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country, city' />
      </drill-paths>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Douglas/Documents/My Tableau Repository/Datasources/GroupProject3.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/22/2019 12:04:43 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='api_en_atm_co2e_pc_ds2_en_excel_v2_41937 (GroupProject_3)' increment-value='%null%' refresh-type='create' rows-inserted='12253' timestamp-start='2019-07-22 00:04:43.992' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_name</remote-alias>
              <ordinal>0</ordinal>
              <family>Custom SQL Query</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>301</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>emms_dt</remote-name>
              <remote-type>133</remote-type>
              <local-name>[emms_dt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>emms_dt</remote-alias>
              <ordinal>1</ordinal>
              <family>Custom SQL Query</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>55</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_emms</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_emms]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_emms</remote-alias>
              <ordinal>2</ordinal>
              <family>Custom SQL Query</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1505</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.288845' group-percentage='0.241036' measure-ordering='alphabetic' measure-percentage='0.278884' parameter-percentage='0.191235' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0g3jnxy07yemax1f577m402zkbji].[sum:co2_emms:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0g3jnxy07yemax1f577m402zkbji].[Top 10 Years of co2 emm]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0g3jnxy07yemax1f577m402zkbji]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Bottom 10 Years of co2 emm:nk]' type='palette'>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:emms_dt:ok]' type='palette'>
            <map to='#499894'>
              <bucket>1968</bucket>
            </map>
            <map to='#499894'>
              <bucket>1988</bucket>
            </map>
            <map to='#499894'>
              <bucket>2008</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1960</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1980</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2000</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1964</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1984</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2004</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1972</bucket>
            </map>
            <map to='#79706e'>
              <bucket>1992</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2012</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1969</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>1989</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2009</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1965</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>1985</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2005</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1978</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>1998</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2018</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1961</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1981</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2001</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1976</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>1996</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2016</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1966</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>1986</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2006</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1973</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>1993</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2013</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1974</bucket>
            </map>
            <map to='#d37295'>
              <bucket>1994</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2014</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1977</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>1997</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2017</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1979</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>1999</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1970</bucket>
            </map>
            <map to='#e15759'>
              <bucket>1990</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2010</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1967</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>1987</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2007</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1962</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>1982</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2002</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1975</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>1995</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2015</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1971</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>1991</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2011</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1963</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>1983</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2003</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[country_name (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bahrain, Kuwait, Qatar and 2 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 10 Years of co2 emm:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#e15c48'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bottom 10 Years'>
      <table>
        <view>
          <datasources>
            <datasource caption='api_en_atm_co2e_pc_ds2_en_excel_v2_41937 (GroupProject_3)' name='federated.0g3jnxy07yemax1f577m402zkbji' />
          </datasources>
          <datasource-dependencies datasource='federated.0g3jnxy07yemax1f577m402zkbji'>
            <column caption='Co2 Emms' datatype='real' name='[co2_emms]' role='measure' type='quantitative' />
            <column caption='Emms Dt' datatype='date' name='[emms_dt]' role='dimension' type='ordinal' />
            <column-instance column='[Bottom 10 Years of co2 emm]' derivation='InOut' name='[io:Bottom 10 Years of co2 emm:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2_emms]' derivation='Sum' name='[sum:co2_emms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[emms_dt]' derivation='Year' name='[yr:emms_dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g3jnxy07yemax1f577m402zkbji].[Bottom 10 Years of co2 emm]' />
          <slices>
            <column>[federated.0g3jnxy07yemax1f577m402zkbji].[Bottom 10 Years of co2 emm]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <lod column='[federated.0g3jnxy07yemax1f577m402zkbji].[io:Bottom 10 Years of co2 emm:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0g3jnxy07yemax1f577m402zkbji].[yr:emms_dt:ok]</rows>
        <cols>[federated.0g3jnxy07yemax1f577m402zkbji].[sum:co2_emms:qk]</cols>
      </table>
      <simple-id uuid='{7B01758A-E0E0-4F3B-8B21-0679002045C8}' />
    </worksheet>
    <worksheet name='Land_Max_Temp'>
      <table>
        <view>
          <datasources>
            <datasource caption='GroupProject_3 (2)' name='federated.12kvczq1r6v2wd18669ba1w1aqhz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Land Ocean Temp&quot;'>
              <calculation class='tableau' formula='&quot;Land Ocean Temp&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.12kvczq1r6v2wd18669ba1w1aqhz'>
            <column caption='ViewFilter' datatype='string' name='[Calculation_1090997022849552393]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[landmaxtemperature]' derivation='Avg' name='[avg:landmaxtemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landmaxtemperatureuncertainty]' derivation='Avg' name='[avg:landmaxtemperatureuncertainty:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column datatype='real' name='[landmaxtemperature]' role='measure' type='quantitative' />
            <column datatype='real' name='[landmaxtemperatureuncertainty]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1090997022849552393]' derivation='None' name='[none:Calculation_1090997022849552393:nk]' pivot='key' type='nominal' />
            <column-instance column='[dt]' derivation='Year' name='[yr:dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:Calculation_1090997022849552393:nk]'>
            <groupfilter function='member' level='[none:Calculation_1090997022849552393:nk]' member='&quot;Land Max Temp&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:Calculation_1090997022849552393:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperature:qk]' field-type='quantitative' max='22.31926247880617' min='-3.4698333811895008' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]' field-type='quantitative' max='3.8576539631653342' min='-0.35112070432837689' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperature:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>([federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperature:qk] + [federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk])</rows>
        <cols>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[yr:dt:ok]</cols>
      </table>
      <simple-id uuid='{97BC7AF6-20A9-4209-BE76-100EB60DBE99}' />
    </worksheet>
    <worksheet name='Land_Min_Temp'>
      <table>
        <view>
          <datasources>
            <datasource caption='GroupProject_3 (2)' name='federated.12kvczq1r6v2wd18669ba1w1aqhz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Land Ocean Temp&quot;'>
              <calculation class='tableau' formula='&quot;Land Ocean Temp&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.12kvczq1r6v2wd18669ba1w1aqhz'>
            <column caption='ViewFilter' datatype='string' name='[Calculation_1090997022849552393]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column datatype='real' name='[landmintemperature]' role='measure' type='quantitative' />
            <column datatype='real' name='[landmintemperatureuncertainty]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1090997022849552393]' derivation='None' name='[none:Calculation_1090997022849552393:nk]' pivot='key' type='nominal' />
            <column-instance column='[landmintemperature]' derivation='Sum' name='[sum:landmintemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landmintemperatureuncertainty]' derivation='Sum' name='[sum:landmintemperatureuncertainty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dt]' derivation='Year' name='[yr:dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landmintemperature:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landmintemperatureuncertainty:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:Calculation_1090997022849552393:nk]'>
            <groupfilter function='member' level='[none:Calculation_1090997022849552393:nk]' member='&quot;Land Min Temp&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]</column>
            <column>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:Calculation_1090997022849552393:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[Multiple Values]' scope='rows' value='Temperature' />
            <encoding attr='space' class='0' field='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[Multiple Values]' field-type='quantitative' max='71.41867997152103' min='-15.976496313762722' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[Multiple Values]</rows>
        <cols>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[yr:dt:ok]</cols>
      </table>
      <simple-id uuid='{7E33BC17-CAE0-4DCB-8799-C4DD01F909F9}' />
    </worksheet>
    <worksheet name='Land_Ocean_Temp'>
      <table>
        <view>
          <datasources>
            <datasource caption='GroupProject_3 (2)' name='federated.12kvczq1r6v2wd18669ba1w1aqhz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Land Ocean Temp&quot;'>
              <calculation class='tableau' formula='&quot;Land Ocean Temp&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.12kvczq1r6v2wd18669ba1w1aqhz'>
            <column caption='ViewFilter' datatype='string' name='[Calculation_1090997022849552393]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[landandoceanaveragetemperature]' derivation='Avg' name='[avg:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landandoceanaveragetemperatureuncertainty]' derivation='Avg' name='[avg:landandoceanaveragetemperatureuncertainty:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column datatype='real' name='[landandoceanaveragetemperature]' role='measure' type='quantitative' />
            <column datatype='real' name='[landandoceanaveragetemperatureuncertainty]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1090997022849552393]' derivation='None' name='[none:Calculation_1090997022849552393:nk]' pivot='key' type='nominal' />
            <column-instance column='[landandoceanaveragetemperature]' derivation='None' name='[none:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dt]' derivation='Year' name='[yr:dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:Calculation_1090997022849552393:nk]'>
            <groupfilter function='member' level='[none:Calculation_1090997022849552393:nk]' member='&quot;Land Ocean Temp&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:Calculation_1090997022849552393:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landandoceanaveragetemperatureuncertainty:qk]' field-type='quantitative' max='4.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]' />
              <lod column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='267' />
                <format attr='maxheight' value='267' />
                <format attr='minwidth' value='3320' />
                <format attr='maxwidth' value='3320' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landandoceanaveragetemperature:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]' />
              <lod column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landandoceanaveragetemperatureuncertainty:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]' />
              <lod column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landandoceanaveragetemperature:qk] + [federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landandoceanaveragetemperatureuncertainty:qk])</rows>
        <cols>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[yr:dt:ok]</cols>
      </table>
      <simple-id uuid='{169D830B-5F09-4397-979C-9037F5644E32}' />
    </worksheet>
    <worksheet name='Land_Temp'>
      <table>
        <view>
          <datasources>
            <datasource caption='GroupProject_3 (2)' name='federated.12kvczq1r6v2wd18669ba1w1aqhz' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Land Ocean Temp&quot;'>
              <calculation class='tableau' formula='&quot;Land Ocean Temp&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.12kvczq1r6v2wd18669ba1w1aqhz'>
            <column caption='ViewFilter' datatype='string' name='[Calculation_1090997022849552393]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]' />
            </column>
            <column-instance column='[landaveragetemperature]' derivation='Avg' name='[avg:landaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landaveragetemperatureuncertainty]' derivation='Avg' name='[avg:landaveragetemperatureuncertainty:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column datatype='real' name='[landaveragetemperature]' role='measure' type='quantitative' />
            <column datatype='real' name='[landaveragetemperatureuncertainty]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1090997022849552393]' derivation='None' name='[none:Calculation_1090997022849552393:nk]' pivot='key' type='nominal' />
            <column-instance column='[landaveragetemperature]' derivation='Sum' name='[sum:landaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dt]' derivation='Year' name='[yr:dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperature:qk]&quot;</bucket>
              <bucket>&quot;[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperatureuncertainty:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:Calculation_1090997022849552393:nk]'>
            <groupfilter function='member' level='[none:Calculation_1090997022849552393:nk]' member='&quot;Land Temp&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:Calculation_1090997022849552393:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperature:qk]' scope='rows' value='Temperature' />
            <encoding attr='space' class='0' field='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperatureuncertainty:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperatureuncertainty:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperature:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landaveragetemperature:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperatureuncertainty:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperature:qk] + [federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landaveragetemperatureuncertainty:qk])</rows>
        <cols>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[yr:dt:ok]</cols>
      </table>
      <simple-id uuid='{CD409D53-F880-4328-AE8C-B54B89914785}' />
    </worksheet>
    <worksheet name='Maximum Average Temperature'>
      <repository-location id='Sheet4' path='/workbooks/GroupProject3_GlobalWarming' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (GroupProject3)' name='federated.1sdpt831md1cyp16vp6yb0w2mqka' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sdpt831md1cyp16vp6yb0w2mqka'>
            <column-instance column='[maxaveragetemperature]' derivation='Attribute' name='[attr:maxaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='real' name='[maxaveragetemperature]' role='measure' type='quantitative' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='real' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[none:year:qk]' included-values='in-range'>
            <min>1900.0</min>
            <max>2013.0</max>
          </filter>
          <slices>
            <column>[federated.1sdpt831md1cyp16vp6yb0w2mqka].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[Longitude (generated)]' field-type='quantitative' max='27744671.920764312' min='-30256071.12564436' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[Latitude (generated)]' field-type='quantitative' max='23401718.89761512' min='-28692199.704911217' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[attr:maxaveragetemperature:qk]' num-steps='8' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[attr:maxaveragetemperature:qk]' value='Maximum Average Temperature'>
              <formatted-text>
                <run>Maximum Average Temperature</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[attr:maxaveragetemperature:qk]' />
              <lod column='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[none:country:nk]' />
              <lod column='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[none:city:nk]' />
              <geometry column='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sdpt831md1cyp16vp6yb0w2mqka].[Latitude (generated)]</rows>
        <cols>[federated.1sdpt831md1cyp16vp6yb0w2mqka].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.1sdpt831md1cyp16vp6yb0w2mqka].[none:year:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{938A50C0-CA1E-450B-8D44-93CB96C258C2}' />
    </worksheet>
    <worksheet name='Minimum and Maximum Average Tempartures'>
      <repository-location id='MinimumandMaximumAverageTempartures' path='/workbooks/GroupProject3_GlobalWarming' revision='' />
      <table>
        <view>
          <datasources>
            <datasource caption='globaltemperatures (GroupProject3)' name='federated.0ljvzvw0r9ocy314po6zp1j2gtew' />
          </datasources>
          <datasource-dependencies datasource='federated.0ljvzvw0r9ocy314po6zp1j2gtew'>
            <column caption='Dt' datatype='date' name='[dt]' role='dimension' type='ordinal' />
            <column-instance column='[landandoceanaveragetemperature]' derivation='Max' forecast-column-base='[max:landandoceanaveragetemperature:qk]' forecast-column-type='forecast-value' name='[fVal:max:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landandoceanaveragetemperature]' derivation='Min' forecast-column-base='[min:landandoceanaveragetemperature:qk]' forecast-column-type='forecast-value' name='[fVal:min:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column caption='Landandoceanaveragetemperature' datatype='real' name='[landandoceanaveragetemperature]' role='measure' type='quantitative' />
            <column-instance column='[landandoceanaveragetemperature]' derivation='Max' name='[max:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[landandoceanaveragetemperature]' derivation='Min' name='[min:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[landandoceanaveragetemperature]' derivation='None' name='[none:landandoceanaveragetemperature:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dt]' derivation='Year-Trunc' name='[tyr:dt:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[none:landandoceanaveragetemperature:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[none:landandoceanaveragetemperature:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[tyr:dt:qk]' scope='cols' value='Year' />
            <encoding attr='space' class='0' field='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]' field-type='quantitative' fold='true' major-origin='0.0' major-show='false' major-spacing='10.0' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]' field-type='quantitative' max='19.0' min='12.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]' scope='rows' value='Land and Ocean Average Temperature (Celcus)' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]' palette='tableau-map-temperatur' type='interpolated' />
            <encoding attr='color' field='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]' value='Maximum Range'>
              <formatted-text>
                <run>Maximum Range</run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]' value='Minimum Range'>
              <formatted-text>
                <run>Minimum Range</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]' />
              <tooltip column='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]' />
              <lod column='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-color' value='#999999' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]'>
            <view>
              <breakdown value='off' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]' />
              <tooltip column='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]' />
              <lod column='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk] + [federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk])</rows>
        <cols>[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[tyr:dt:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{9101E8AF-38F9-4A87-AB6B-BFF47C860A0E}' />
    </worksheet>
    <worksheet name='Neba1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Relationshiop between Carbondioxide emmision and year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (GroupProject3) Extract' name='federated.0xwkjt61hn2maf179lkg01b3b1j4' />
          </datasources>
          <datasource-dependencies datasource='federated.0xwkjt61hn2maf179lkg01b3b1j4'>
            <column caption='Co2 Emms' datatype='real' name='[co2_emms]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_emms]' derivation='Sum' name='[sum:co2_emms:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0xwkjt61hn2maf179lkg01b3b1j4].[sum:co2_emms:qk]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0xwkjt61hn2maf179lkg01b3b1j4].[sum:co2_emms:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xwkjt61hn2maf179lkg01b3b1j4].[sum:co2_emms:qk]</rows>
        <cols>[federated.0xwkjt61hn2maf179lkg01b3b1j4].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{1DCE554E-05FB-4CA6-8557-B687B644F635}' />
    </worksheet>
    <worksheet name='Neba2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Relationship between Carbondioxide emmmision and year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query (GroupProject3) Extract' name='federated.0xwkjt61hn2maf179lkg01b3b1j4' />
          </datasources>
          <datasource-dependencies datasource='federated.0xwkjt61hn2maf179lkg01b3b1j4'>
            <column caption='Co2 Emms' datatype='real' name='[co2_emms]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[co2_emms]' derivation='Sum' name='[sum:co2_emms:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='real' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <text column='[federated.0xwkjt61hn2maf179lkg01b3b1j4].[sum:co2_emms:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d4a6c8' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0xwkjt61hn2maf179lkg01b3b1j4].[sum:co2_emms:qk]</rows>
        <cols>[federated.0xwkjt61hn2maf179lkg01b3b1j4].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{F4FF1434-9818-462A-B3E3-72704364DC66}' />
    </worksheet>
    <worksheet name='Top 10 Years'>
      <table>
        <view>
          <datasources>
            <datasource caption='api_en_atm_co2e_pc_ds2_en_excel_v2_41937 (GroupProject_3)' name='federated.0g3jnxy07yemax1f577m402zkbji' />
          </datasources>
          <datasource-dependencies datasource='federated.0g3jnxy07yemax1f577m402zkbji'>
            <column caption='Co2 Emms' datatype='real' name='[co2_emms]' role='measure' type='quantitative' />
            <column caption='Emms Dt' datatype='date' name='[emms_dt]' role='dimension' type='ordinal' />
            <column-instance column='[Top 10 Years of co2 emm]' derivation='InOut' name='[io:Top 10 Years of co2 emm:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2_emms]' derivation='Sum' name='[sum:co2_emms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[emms_dt]' derivation='Year' name='[yr:emms_dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g3jnxy07yemax1f577m402zkbji].[Top 10 Years of co2 emm]' />
          <computed-sort column='[federated.0g3jnxy07yemax1f577m402zkbji].[yr:emms_dt:ok]' direction='DESC' using='[federated.0g3jnxy07yemax1f577m402zkbji].[sum:co2_emms:qk]' />
          <slices>
            <column>[federated.0g3jnxy07yemax1f577m402zkbji].[Top 10 Years of co2 emm]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0g3jnxy07yemax1f577m402zkbji].[io:Top 10 Years of co2 emm:nk]' />
              <lod column='[federated.0g3jnxy07yemax1f577m402zkbji].[io:Top 10 Years of co2 emm:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0g3jnxy07yemax1f577m402zkbji].[yr:emms_dt:ok]</rows>
        <cols>[federated.0g3jnxy07yemax1f577m402zkbji].[sum:co2_emms:qk]</cols>
      </table>
      <simple-id uuid='{88836B00-2ED8-4737-B2B3-B870CBB9326B}' />
    </worksheet>
    <worksheet name='Top 5 Countries of CO2 Emission'>
      <table>
        <view>
          <datasources>
            <datasource caption='api_en_atm_co2e_pc_ds2_en_excel_v2_41937 (GroupProject_3)' name='federated.0g3jnxy07yemax1f577m402zkbji' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0g3jnxy07yemax1f577m402zkbji'>
            <column caption='Co2 Emms' datatype='real' name='[co2_emms]' role='measure' type='quantitative' />
            <column datatype='string' name='[country_name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[country_name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Bahrain, Kuwait, Qatar and 2 more&quot;'>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Emms Dt' datatype='date' name='[emms_dt]' role='dimension' type='ordinal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2_emms]' derivation='Sum' name='[sum:co2_emms:qk]' pivot='key' type='quantitative' />
            <column-instance column='[emms_dt]' derivation='Year' name='[yr:emms_dt:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0g3jnxy07yemax1f577m402zkbji].[Set 1]' />
          <filter class='categorical' column='[federated.0g3jnxy07yemax1f577m402zkbji].[country_name (group)]'>
            <groupfilter function='member' level='[country_name (group)]' member='&quot;Bahrain, Kuwait, Qatar and 2 more&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0g3jnxy07yemax1f577m402zkbji].[country_name (group)]</column>
            <column>[federated.0g3jnxy07yemax1f577m402zkbji].[Set 1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0g3jnxy07yemax1f577m402zkbji].[sum:co2_emms:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0g3jnxy07yemax1f577m402zkbji].[none:country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0g3jnxy07yemax1f577m402zkbji].[io:Set 1:nk] * [federated.0g3jnxy07yemax1f577m402zkbji].[sum:co2_emms:qk])</rows>
        <cols>([federated.0g3jnxy07yemax1f577m402zkbji].[country_name (group)] / [federated.0g3jnxy07yemax1f577m402zkbji].[none:country_name:nk])</cols>
        <pages>
          <column>[federated.0g3jnxy07yemax1f577m402zkbji].[yr:emms_dt:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{D9F6A8D2-AF51-4260-8084-D5DAA48D2C8E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CO2 and Year'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='49000' id='3' name='Neba1' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='49000' id='5' name='Neba2' w='98400' x='800' y='50000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='15' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Neba1' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Neba2' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F3326DB4-B514-4E6D-A3B5-9614176BCDF5}' />
    </dashboard>
    <dashboard name='Min and Max AverageTemperatures Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Minimum and Maximum Average Tempartures' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='9' name='Minimum and Maximum Average Tempartures' pane-specification-id='2' param='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='8' name='Minimum and Maximum Average Tempartures' pane-specification-id='1' param='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]' type='color' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Minimum and Maximum Average Tempartures' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='9' name='Minimum and Maximum Average Tempartures' pane-specification-id='2' param='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Minimum and Maximum Average Tempartures' pane-specification-id='1' param='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]' type='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2E0BE7B5-70F6-4CDD-87CC-C08A5CA5B5CA}' />
    </dashboard>
    <dashboard name='Temperature Change Map Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='79900' x='800' y='1000'>
              <zone h='98000' id='3' name='Maximum Average Temperature' w='79900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='185' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='18500' x='80700' y='1000'>
              <zone h='8125' id='8' name='Maximum Average Temperature' pane-specification-id='0' param='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[attr:maxaveragetemperature:qk]' type='color' w='18500' x='80700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13750' id='9' name='Maximum Average Temperature' synchronized='1' type='currpage' w='18500' x='80700' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Maximum Average Temperature' w='79900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Maximum Average Temperature' pane-specification-id='0' param='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[attr:maxaveragetemperature:qk]' type='color' w='18500' x='80700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13750' id='9' name='Maximum Average Temperature' synchronized='1' type='currpage' w='18500' x='80700' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{036FA8C2-F993-406A-B02A-D693069A2AA5}' />
    </dashboard>
    <dashboard name='The Error Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='View' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Land Ocean Temp&quot;'>
          <calculation class='tableau' formula='&quot;Land Ocean Temp&quot;' />
          <members>
            <member value='&quot;Land Ocean Temp&quot;' />
            <member value='&quot;Land Temp&quot;' />
            <member value='&quot;Land Max Temp&quot;' />
            <member value='&quot;Land Min Temp&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='3' param='horz' type='layout-flow' w='82400' x='800' y='1000'>
              <zone h='98000' id='5' name='Land_Ocean_Temp' show-title='false' w='82358' x='800' y='1000'>
                <layout-cache cell-count-w='166' has-max-size-h='true' maxheight='645' minheight='645' non-cell-size-w='55' type-h='scalable' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='10' name='Land_Temp' show-title='false' w='0' x='83158' y='1000'>
                <layout-cache type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='13' name='Land_Max_Temp' show-title='false' w='0' x='83158' y='1000'>
                <layout-cache type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='98000' id='15' name='Land_Min_Temp' show-title='false' w='0' x='83158' y='1000'>
                <layout-cache type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='8125' id='8' name='Land_Ocean_Temp' pane-specification-id='3' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]' type='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='6500' id='9' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                  <format attr='background-color' value='#ffffff' />
                </zone-style>
              </zone>
              <zone h='3375' id='11' name='Land_Temp' pane-specification-id='2' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]' type='color' w='16000' x='83200' y='15625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='12' name='Land_Temp' pane-specification-id='1' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landaveragetemperature:qk]' type='color' w='16000' x='83200' y='19000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8125' id='14' name='Land_Max_Temp' pane-specification-id='1' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]' type='color' w='16000' x='83200' y='27125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1500' minheight='1500' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='28' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='29' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='5' is-fixed='true' name='Land_Ocean_Temp' show-title='false' w='82358' x='800' y='1000'>
                  <layout-cache cell-count-w='166' has-max-size-h='true' maxheight='645' minheight='645' non-cell-size-w='55' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Land_Ocean_Temp' pane-specification-id='3' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]' type='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='10' is-fixed='true' name='Land_Temp' show-title='false' w='0' x='83158' y='1000'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3375' id='11' name='Land_Temp' pane-specification-id='2' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]' type='color' w='16000' x='83200' y='15625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='12' name='Land_Temp' pane-specification-id='1' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landaveragetemperature:qk]' type='color' w='16000' x='83200' y='19000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='13' is-fixed='true' name='Land_Max_Temp' show-title='false' w='0' x='83158' y='1000'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='14' name='Land_Max_Temp' pane-specification-id='1' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]' type='color' w='16000' x='83200' y='27125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='15' is-fixed='true' name='Land_Min_Temp' show-title='false' w='0' x='83158' y='1000'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6500' id='9' mode='compact' param='[Parameters].[Parameter 1]' type='paramctrl' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ffffff' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CD57CBAB-B7BB-443D-BFFE-E8667ABC2BAF}' />
    </dashboard>
    <dashboard name='Top 5 Countries by Year'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='api_en_atm_co2e_pc_ds2_en_excel_v2_41937 (GroupProject_3)' name='federated.0g3jnxy07yemax1f577m402zkbji' />
      </datasources>
      <datasource-dependencies datasource='federated.0g3jnxy07yemax1f577m402zkbji'>
        <column datatype='string' name='[country_name (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <calculation class='categorical-bin' column='[country_name]' default='&quot;Other&quot;' new-bin='true'>
            <bin default-name='true' value='&quot;Bahrain, Kuwait, Qatar and 2 more&quot;'>
              <value>&quot;Bahrain&quot;</value>
              <value>&quot;Kuwait&quot;</value>
              <value>&quot;Qatar&quot;</value>
              <value>&quot;Trinidad and Tobago&quot;</value>
              <value>&quot;United Arab Emirates&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Top 5 Countries of CO2 Emission' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='11125' id='8' name='Top 5 Countries of CO2 Emission' param='[federated.0g3jnxy07yemax1f577m402zkbji].[country_name (group)]' type='filter' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15750' id='9' name='Top 5 Countries of CO2 Emission' pane-specification-id='0' param='[federated.0g3jnxy07yemax1f577m402zkbji].[none:country_name:nk]' type='color' w='16000' x='83200' y='12125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='13750' id='10' name='Top 5 Countries of CO2 Emission' synchronized='1' type='currpage' w='16000' x='83200' y='27875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='20' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='11125' id='8' mode='checkdropdown' name='Top 5 Countries of CO2 Emission' param='[federated.0g3jnxy07yemax1f577m402zkbji].[country_name (group)]' type='filter' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Top 5 Countries of CO2 Emission' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15750' id='9' name='Top 5 Countries of CO2 Emission' pane-specification-id='0' param='[federated.0g3jnxy07yemax1f577m402zkbji].[none:country_name:nk]' type='color' w='16000' x='83200' y='12125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='13750' id='10' name='Top 5 Countries of CO2 Emission' synchronized='1' type='currpage' w='16000' x='83200' y='27875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F46BBABC-C122-475A-994C-E246B8D94A12}' />
    </dashboard>
    <dashboard name='Top/Bottom 10 Years Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
              <zone h='49000' id='3' name='Top 10 Years' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='9' name='Bottom 10 Years' w='98400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='19' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Top 10 Years' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Bottom 10 Years' w='98400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{817981D3-6175-4A44-B161-C17135C99BB5}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='0.875' source-height='135'>
    <window class='dashboard' maximized='true' name='Min and Max AverageTemperatures Dashboard'>
      <viewpoints>
        <viewpoint name='Minimum and Maximum Average Tempartures'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DB60CAC2-AC37-47AA-B7EE-3EADECB398FB}' />
    </window>
    <window class='dashboard' name='Temperature Change Map Dashboard'>
      <viewpoints>
        <viewpoint name='Maximum Average Temperature'>
          <current-page>
            <multibucket>
              <bucket>1900.0</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{A25E9B8B-6639-48CA-BDF3-D12ABFBD48E6}' />
    </window>
    <window class='dashboard' name='The Error Dashboard'>
      <viewpoints>
        <viewpoint name='Land_Max_Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Land_Min_Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Land_Ocean_Temp'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Land_Temp'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{6D6CF341-022B-42F5-8178-63C9D2C565F1}' />
    </window>
    <window class='dashboard' name='Top/Bottom 10 Years Dashboard'>
      <viewpoints>
        <viewpoint name='Bottom 10 Years' />
        <viewpoint name='Top 10 Years' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D62C4797-E9FF-4C58-AE21-D1ED51F02764}' />
    </window>
    <window class='dashboard' name='Top 5 Countries by Year'>
      <viewpoints>
        <viewpoint name='Top 5 Countries of CO2 Emission'>
          <current-page>
            <multibucket>
              <bucket>2014</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0g3jnxy07yemax1f577m402zkbji].[none:country_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{C0693C30-DB8F-47DC-8F5D-43CFBD3CDADC}' />
    </window>
    <window class='dashboard' name='CO2 and Year'>
      <viewpoints>
        <viewpoint name='Neba1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Neba2'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{BC53A688-64DE-4732-ACED-86CF3B899D63}' />
    </window>
    <window class='worksheet' hidden='true' name='Bottom 10 Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[Bottom 10 Years of co2 emm]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[io:Bottom 10 Years of co2 emm:nk]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[yr:emms_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{77895901-2E75-4633-81D4-26F4B25B243B}' />
    </window>
    <window class='worksheet' hidden='true' name='Land_Max_Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[avg:landmaxtemperatureuncertainty:qk]</field>
            <field>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:Calculation_1090997022849552393:nk]</field>
            <field>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{55F1027D-F8AA-46A8-B925-07CE4C9B2E02}' />
    </window>
    <window class='worksheet' hidden='true' name='Land_Min_Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='5' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]' type='color' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]</field>
            <field>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ADD5ED0B-4AF7-4A0C-805F-9B7C047F0D34}' />
    </window>
    <window class='worksheet' hidden='true' name='Land_Ocean_Temp'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]</field>
            <field>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[none:landandoceanaveragetemperature:qk]</field>
            <field>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19090978-7137-4F6E-AC00-19B9CD88A096}' />
    </window>
    <window class='worksheet' hidden='true' name='Land_Temp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.12kvczq1r6v2wd18669ba1w1aqhz].[sum:landaveragetemperature:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12kvczq1r6v2wd18669ba1w1aqhz].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9AB8B785-D87C-45B7-94B1-550FCAC847E4}' />
    </window>
    <window class='worksheet' hidden='true' name='Maximum Average Temperature'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sdpt831md1cyp16vp6yb0w2mqka].[attr:maxaveragetemperature:qk]' type='color' />
            <card dropdown='0' playctrls='0' trailctrls='0' type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>1946.0</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1sdpt831md1cyp16vp6yb0w2mqka].[attr:maxaveragetemperature:qk]</field>
            <field>[federated.1sdpt831md1cyp16vp6yb0w2mqka].[none:country:nk]</field>
            <field>[federated.1sdpt831md1cyp16vp6yb0w2mqka].[none:year:ok]</field>
            <field>[federated.1sdpt831md1cyp16vp6yb0w2mqka].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{582F8D77-EA71-45EB-8268-EB0189417A22}' />
    </window>
    <window class='worksheet' hidden='true' name='Minimum and Maximum Average Tempartures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:max:landandoceanaveragetemperature:qk]</field>
            <field>[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[fVal:min:landandoceanaveragetemperature:qk]</field>
            <field>[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[none:dt:qk]</field>
            <field>[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[none:landandoceanaveragetemperature:qk]</field>
            <field>[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[tyr:dt:qk]</field>
            <field>[federated.0ljvzvw0r9ocy314po6zp1j2gtew].[yr:dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09215530-340A-4A51-945D-1D0EAA08EF7C}' />
    </window>
    <window class='worksheet' hidden='true' name='Neba1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{FF934DDD-EE1A-4735-BD32-BD74EA10D2EA}' />
    </window>
    <window class='worksheet' hidden='true' name='Neba2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{89276797-9A9B-4333-A38D-89C0D8D50B4D}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 10 Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0g3jnxy07yemax1f577m402zkbji].[io:Top 10 Years of co2 emm:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[:Measure Names]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[Bottom 10 Years of co2 emm]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[Top 10 Years of co2 emm]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[io:Bottom 10 Years of co2 emm:nk]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[io:Top 10 Years of co2 emm:nk]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[none:co2_emms:qk]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[yr:emms_dt:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1E07052-6ABC-43CD-81C6-247A6E141B42}' />
    </window>
    <window class='worksheet' hidden='true' name='Top 5 Countries of CO2 Emission'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0g3jnxy07yemax1f577m402zkbji].[country_name (group)]' type='filter' />
            <card pane-specification-id='0' param='[federated.0g3jnxy07yemax1f577m402zkbji].[none:country_name:nk]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>2014</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[:Measure Names]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[Set 1]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[Top 10 Years of co2 emm]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[io:Set 1:nk]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[io:Top 10 Years of co2 emm:nk]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[none:country_name:nk]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[none:emms_dt:qk]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[tyr:emms_dt:ok]</field>
            <field>[federated.0g3jnxy07yemax1f577m402zkbji].[yr:emms_dt:ok]</field>
            <field>[federated.0ps0pa30doqhx410vvy640sxei51].[none:country_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F66489D-6D84-42C4-A4E6-03AD31C66580}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='CO2 and Year' width='384'>
      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
      RZncdf8jRCZMwNbRDAF90wnm7v2E9/J6+MWj95C5/T/84H//QHJSIuWVNfz018+zeEosf/zZ
      Y3z9+89gqNvLxn1NPDdzNm+9/So945Zwz42r2fGf1/jxsy+RmjqRuqoyFlx1OwBvv/QsL27a
      SWyYHx2E8srf/0SAvu96xmnp5OF7v0WT3Y/ediNLrruL7991I5+8/SobP8kkNCyMppoyYpMm
      Ye210tlax5Lr7uGxe7/KX3/7FPlNTsJDgyguLGJyeipWO1SXFvKdp//MNUsn8cRD9+OTkEiA
      t46i6lYmjQ9F462noLCMl996n9QYO99/6An+s+td6o/s5t5HniQxKYmmuirue+I51i1M5ImH
      vs8ru7YS0Gvi4XvuotHmg7O7lbiZa/jdU98ld+8nPL3hbQJ8DeicFuxhabyx4Zeu32h1zi7u
      /P4vSEqIo7q8hBvufZx7brqMjX/9LQdLTXj5+GAyVrH21u/y0K1Xn/E8Anh5e/GrHzzEjza8
      yYyEUD7e9A+K7Amkxoec9rf6xoZf8a9th4gM8aO4tIrn/v46M1OCeeKh73PP47ez4cVNPP6z
      37Jouv9gyyFxsagz6alXSxesVM9v2KD+9IffqWuvXKs2frRHKaXUI3feoHbl1SqllPr0rb+p
      J559SSml1D1fvUzl1fcopezK3NWl8nKy1YGMz9XKxetUh1JKtZWppdfc1m83x9fJ2bFZ3XL/
      48ruVMrpsKr/vvtm9d7ufJX3xXvq1od+ouxOp1KOTnXl4stUm1Lq77/5kfrOD3+udu3ZpzrM
      ZmWxOfot67Q3q0vn9C1bdnCbuu3hJ5VSSr336nPq6Rf+TymlVG9Hg1q3Yrmq6XS44vnivVfV
      o794QSmllLW7TV27erkqbu5VP3/kTvWfXXlKKaUOffqW+vYTzyqllHruyYfVm9sOutb/x+9+
      rP761qeqtfSg+p9n/6Ie+PZ3lFJKPXr3V1V2lUltf+cl9YNfbji2/3p1xbobVI/Tqm5Zv06V
      NnUqpZT65x+fUs//6yOl2srU4nVfVd0Wu1JKqf++8wb1RV69a1/Vh7er6+945DRf3unP/7Y3
      N6g1665Vu7NLjn3FeWrNjd9STqdSyulQP37oNrXx4/3q441/Vt996o/KqZSy93aqW6+7XGWV
      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
    </thumbnail>
    <thumbnail height='384' name='Min and Max AverageTemperatures Dashboard' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Temperature Change Map Dashboard' width='384'>
      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
      nwqj+64AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='The Error Dashboard' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9Z5gd13nn+a8b+qIb3cg5MgIkIBIMIilIohWsYIkKVHLaUVjKlsfWPLZ3
      1uvd2Q87Xu9qxvbK9mjtZ9aSNZZGskXblExaVqCCJUqMEAOYSQBEIoDO6cZKJ+yHE6rq3rq3
      6zb6Nhro98eHT6O7TnjrVJ33PedU1f84UkoJgiAIYtmRu9AGEARBEBcGCgAEQRDLFAoABEEQ
      yxQKAARBEMsUCgAEQRDLlEK7A9VqddGMaDQaGBgYWLT6CIIgiA4BYGhoqOeVc87tz/7+/p7X
      RxAEQUS0DQDz5eSxl+FzwGcSB/bvwdNPHYbj5HD5vushKmM4NTaLXC6P6/dfs9BVEwRBEF2w
      4AFg1xVXI5/P44EHHsDYiQBDO67FFRvyeOyJZyGFh9cffD2OPX0Ik67Ahv48ACCfz6NQWHBT
      CIIgiA4s+ENgRzI88uAD2HXVPpTLDaxesxJOfgUgfDhwAACrB0so1/yFrpogCILoggUfdj/8
      4E9x48G3YHBFAZVCBafPjmH11gIK/Wsh3WmEQmJ0uoErdq9Y6KoJgiCILljwALB6zVqcO30c
      yBVx9dVXYdWJYzh2SuCmA9cAQQNHXnoJq7dfgcGis9BVEwRBEF3gLAUxuGq1uihvHREEQRAR
      9CEYQRDEMoUCAEEQxDKFAgBBEMQyhV6+JwiCuET4yZEJ7F4/gMs2rGyb5tRkHaemGti9foBm
      AARBEBc7Dx+fxqvTLn56dBKnpxqpaf7zd4/iwWNTODXVwE+OTODUZJ0CAEEQxIXmoVem8Op0
      uuNu5vRUAw8em0r87ZHj0zgz43ZdLwUAgiCIReCREzM4M+Pi1akGHmpy4A+/okbwf/K9V/Dw
      K9Op+R81+addPPTKFM7MuHj0xExq2gePTeE/f/coAOBPf3gcj5xIL5MCAEFcwpTdEI+cmEbZ
      DS+0KRc9/8/3X8HDx6fx4LEp/KfvHE0c++P7j+GhV6ba5FQoB+5ZB3521sOh07OpaV+dbthZ
      gSn30ZMzODvj2TRnZzw8ejI9AGSFAsAS4Wenyzg3682dkCA0FY/h0KlZvDhaw//7wCmcjd0/
      FY/hZ6fLODvr4dETM6h47Lzre364gueHK/j64VF8/fDonLY9/moZZ2dcPHxcBaAXR2t4cbQW
      pXFDPHZyBpVYcGpOk5V7nx3Dvc+OdUxzz5PDuOfJ4Y5pPvfjU3jsZOSUHzs1i889cCo17dlZ
      D4dOJR34oVOzODvr4eyMi8dOznQcpZ8re/jZ6XLqMRUkpu3PXkFvAV1ARio+RioBbtoxhMdf
      LQO7VmP7GtJIIiKGyz6++cIE3rd/ox3FvzxWBwDcsns1fna6jFt3r7bp/+HJcwCAN165Ho+/
      WsbNO6Iv7P/paeW0r906CABYVSrgvufG8dY961D1OK7ZvBKrViRdwnDFx7dfnMQd+zbghRG1
      SVQ+l5/T7qrP8MSrFdy4fRCPHJ/GzrX91rEbEZihUh6PnZrFjjUr8P2X1SjX0Qf3bRlsKdOc
      90tjqpy37VmPIxMN7N0YbSZ1z1MjAICP3LTV2nFswsXVG7vbb+TQqVn87HQZt8Tatplzs8qB
      33bZmijf6TJuAyClxGMnZ3HbZWvw6MkZHLxibVf1LxYUAC4gI5UAT52r4qYdJINxMXJu1sO9
      z47jA9dvahu4qz7DK5MurtrQjx8eUU7umk3qFb1rU5xcc76BYjRJf3nMjIzPT0fLONJbdynn
      VvU4fna6jO2rS/j+y5MAgA/fsGXOcobLPr714iTes28Dyp4KTtdubn9OzfXfsmvVnGkrHsPL
      Y3Vcs3klXh6vJ45VfY4nz1awbVUpNd9LozWsGSji8Lkqtq7qi+VTQWGmEeCl0Rr+3c/tntOO
      SxUKAF3w3GgdmwaL2DzYN3fiBeSJM+om37a69Ubvhs8/chY371yF1+6cu+M1U/UYjk40sGfj
      AEaqAQBgz8bWbTy/d0RNVy9ft6Jtml7ykh5lnphWyyF37NvQVf4j2jnt3dz+PepXJtXbFv0F
      5YhHKgG++/I07ti33q7JfvCAcqA1n+PwuRq2DEX3jHHkJgCMVHx85+UpvPua9XjqrBpl37Rj
      CIfP1XBgW3s7eslIxce3X5rCjdvnduhA5NRzOjgNrph7ltCJc7Me7ntuHLfsWm2DUzeY5bG0
      kbe6JlVsGIjc3189fHZe/eJiZ8kFgMPnqrazjFYD3Lg9Gh0/P9bAppVFDJd9PD1cwydumXuU
      Mt/6z856eOLVCn7zjTvxhUfP4eYdQzg67eM1GMC5WR+Hz1Vxx74NGK0GuGHbIJ4dqWPzYBFw
      gPFaiIBxPHW2il9/3fau6n/qbBVPnaviPfs2YKwW4MDWQTx5pgLsXIUfHJvBgW2DuGFbtk5p
      eGakdt5BS422qti6qoRjE+p1NePcjbO449r1Nn1zmk6MVHx89+VpvOuaddiaMprrBuOI+orZ
      lilemXQx2JfHgyfLeNc163BkXNmdz6uR98q+HO4/Mo1f2LvOOueCPvaazbSPdTOm/W7eRbPa
      i4El9xD46eEaRqsBRqsBnh5WI6WvPDmGZ4ZreH6sgfF6trcZxmoBnh2td0zz1Nkq/tsh9VDo
      xfEGJuohDp9T9WdhtBrgGW3js6N1jNVCjNdCPDeafJ/384+exRNnKnhutI6xWoCxaoBnRzrb
      NlZrn+aZkRq++lTnB17J9KreNL729ETi2KtlH6+WfZyY9nBi2sNYNcDfHh5PzV/1GZ48W0HV
      523rHqn4+NLjIxiptG4ANFoN8OUnRjO3dztqPsezI3XUUuyoBRzPjdZRC6Jj3z86je8fnbaj
      8/gxwytTLl6Z6v69asP3jkzb2RBBLFWWXADohqfOVvHFQ8mn+l96fASHz1UxVgvxnA4A33hx
      Gi9OuDg+42PaTX8b4sVxFxMZg8t8eW60gfFaiLFaOGcAyMJIRc1EAOCe56fwwngDY7UAz43W
      MdVgODqV/lbRsyN1/N3hcft73BGfKav/TQDoRNVXs5yqP/cbJrWA4+nhGmo+x8lpDyfblG2c
      8yuTrl1qMfmbHbkJLsenXDw3Wkc9xZHXA47nxxqoBxynZnycmqGd6AjCsOSWgObL3z87OeeU
      /PiMjyvXliAlMNUmEFxMjFYDHD5XSyyTjddCPD/WQKmYx7FpH3vWL423imo+xzMjdWwZ6sNJ
      7YT3bWr/ZoYZfa/uL+Cnp6q4ZsMKtQQ4WMTj59Ss65ouz+30LDl/gohzUc8A5suU2350TBAE
      cbEihMBce3xJKW26ZRkACIIgLiWCkIFzASEk2vl/3w/BOQekhBSSAgBBEMRSgGnnnWUEDwBo
      ShKGHEKI6LCU4Fwkyk6DAgBBEEQGpJRq9KyXUOII2X7kbTCjdAkJ0ZSYc+X4hZSQzd49Vn/8
      GBcCQZj+Bp6QElzbaMpO45J5CEwQyxUhJYKQQ7YZ5XVaFphXfU3OLw0poGxawHo7wfncFWUx
      xThgR3/QFnf2UqoypA4CibKlnLOGIGTgQiCfU2UHAUO1lv4sUkq0HbUbuJAIWftXsLNAAeAC
      wriAH6i3kRaroxAXF1ICIePaMSmMY+BcoNbwwZiwaUwixgUqNQ+MR18Sm/xO7PdOo0OTiAvj
      +dSfeJYAIJVzUssaKjPnylmJuJSFLlNIVaZgc3eENMdobMo1qWRIHRw7jayb00MCAhLMjMrb
      OGLGBFwv+eo458JeBzOi53M48gsJBYALSKcpHLH0USNv1jKdj2McuJSwjrYbJR8pJRgTetSp
      /tbJAWcZSBiHJLVzElKCcW6XOBLlQc8gUpynkBKeH3Y8/zTSRq3tgpDUSxkSANN9xaTkQqDe
      CJLt0VSMMDORlCZLG8nbYyJaQ58vS9ftR1AA6AIzorlYOR/LpVSjyrlGUTVXfdW7ou/C3lrz
      DayRM2kvJdE8orNOqtV/6pFw0oGnrf9W6z44F7ZsISQafrjoo0dro9DOPWP9oWnvBbrsErCz
      HiHaO+q5ykhDSAk/5BArclFQNSP3ZcaSCwB2vdJp7Sgh4+BCJB5wLDSqDjXtY3oEYOoMWdRB
      zVqg+Z3pG0hwiYYXgvO+eTkhCWmnnWakZJ7iz9Y8eMEK9Je6u2y8w1sA3dillgtaHSAk7DFD
      N53JBpcF6H92lO1kG2cbx2zyGbvjoz9hr7lM/B6H61Hy+Z7C+Y46LzR8AZ1ohmX1BYNnffvm
      EmPJBICnzirJVnsNYqOpIOT6gYewo4G5RkZqfY5F+VM7VjSy8EMOxmXHV6Zacsukw2iXz5xH
      vOy5HKQ53zQYE/AyyC/Ysnj7h4CuH0KI6IvaSkON4I0DFVLCC9h5BZC58kqz3jrP3i70enNa
      B44vwRji7SqbfhpM8DcP47r1DVmSGzG6FYXzk3cmiPmyZF4DPXyuipHKPETBWqbcrUkCPaqf
      rQfwYnox8Sm7H/KezSoMZiZhprfnixogqXLKNR9+oM4zCDm8gGOmli59EDKOeuzhVeTkIpsY
      52B8jhmMjN6MyGKriL1C1+5NEi6SwV1N11n095TrLSUQcoHUEB9bgmku+0Jjxeg6iOkRRC9Z
      MjOA86VS9+EH2SSPl/qT+UuS2DJLN20vhF6v1ctiEoCfIvqWhV4HeIK42MgUAOqzE7jvn/8F
      +w/cjOLQRuy/cluv7SIIgiB6TKYloLvvvhvXXb0d52o+HvvxT3ttE0EQBDEPzMdmnVAvuHBA
      ZpwBbFm7Ej966HEMTzfwhnd+ZEEMJQiCIBYGI0URhgyCC6DQ+hqzSSO0TpBExgCw45qbcOPB
      1RDFQezctmmhbScIgljWmNeRzZuCueZPmmMEQYhqPblbXbNOkBTCfnnteQFYG8mITEtA9Ykz
      eGWsisH+IuoN0tEnCGL5wXj0IWjzS3yZvrXRr6yJDl8Zd/ogzfVCMBb/PkWAsfTXwc0ofy4y
      BQDGOY48fQj33HMPnnjuSJYsRJc0XB9hePHvUkYsLspXtP9SVggJP2Dz/shJCKV3I0T0Gi3j
      wn4n0dYu/eGgXW5IqV5IZVvc4XV6RbgTQcAQBJ37j+uGcN3O2766XpiQqogLtnXSTTIfknEu
      EqJ8Qsi2o28h2ovYcc4RBCE4Fz31C5mWgDhjCMNQG0av0i0YsVcjG26AkHGsQPECG0UsJWTM
      gRu5haCDQ4g702ZfZZy2EzvO9Ad07b7niEtCNPd96/DafIBnnaJ1jsnRs9HpEQIIMrzamzYy
      bq7bawoCQgg03KDrV4DNtzGdYJzDD5rE4PS3Pg6gFQVE2wCwFMgUAH7uFz6A26VEUDmL+5s2
      YV9OBPpjsXxuyXw/t+RYKlpJi6HrEl+z7TTKNYJxwjjQFJmKZgcspIQ/D6G1LGS5RhIZhOWM
      LEgPmzqunW9+5kz7mQ850+rXHx2mHtKBJwzzbb+oT9PsvxTJFAB+ev+9eOn0OERQw8rtN/ba
      JgBJqeT438xU9Hx1sOfCjFyASApASUpIeH6Aieka5PbBxMdN5t9GZXA+s6WQCTS80ErJApHO
      kJWSaK9T1pGZ2Qbcjf0YWDG/WYbQnZ13+ELYTN+br11HzExoIbSAzM8uApHRX0rzJVJ/iRwf
      wdZd88X6oK3TtI04zxlyNxIfS5Fu2r1jOVLGZie9d8RewOZc1roUyRQADhx8C25/52oAEizD
      xgvnQ90LEDBup75AJCFg1hTVulqWd11VGqMhlJbGBJJmIa/4FLDt/RfzGCZIOE4kexCX3TUC
      b+o1LJEpgKU9aDKBgXUxpW14Qdv63KZRZlwDx5yXfx5aQDZ/SiNyIeBqxcvz6eNGez59KaL1
      mHHknAvU6j54TDPf2h0bdRo9+W4CelanlWUnKYLoFZnWMu679z4Ui0XIcAZf/sq9bdNJyfHM
      Ew/j8WeOAgCOvvQcjhw5gmMnTgMAnn/mKbzw7GGMzdRb8jaaHr5kIT5Kjv/NvusqYntiSoly
      3YcXqkjvBgxcSoSLGPXNphSig9BbN3Ae7SdgRjBG8yZkHA0v/YGXmt7LRDmVupdwcFlHXnOl
      MdK7XM/ozEym3WjLaPtwLqw9kQBgcr2ZC4maGyDkQuv9pNWvBwAmWC8hZ9t8HQhisZlzBvCj
      b92DQ4cOwfN9wMnhne9r/yFYWK9g42WX4dgLowCActXDLbdeBwDwZ8/AL27Ezft24NFHD2Hz
      wdfZpQS7U5BdcomepJvXnOLHrKKmcfCpadofC0LACziEyM8rf/zfzWnM8mTn/O3t71R2lMbR
      xzhCJhJpOIeeJXXfNnEHGy1tiaY0PHaMtz1m5ZXtvqQcQcjBGLezN2FnG631mzScR6Nvrtfa
      7cxQ3zcyVkdL/ebeSjlmzs3kT6ZBwkbBW9tGiKb6084/Jb9BpN33xramYzy1/ihAGntaj3Vo
      G3v9ojwt7ZaS32Cuf/y87bmJ9ufWWn9Kfp48t4T9GepvubbxtjXXzd5rrX3EPCpv11c6HVN+
      oH3+Tsdsmg51ZPERjjZzLv81ZwB463s+gj3X7sePH34cXEiMjY7iqh0bUtP2Da7FtsEijkEF
      gN07t+DIyy9hbLKM/TsHsXLNbqiGpVEPQRDEhSbTM4Bvfed+DOTyuOHNP4dT5xqZCx9aswGb
      tu5E9eGHMbBpK2ZfOge5+XIgp1Q78/l84mdOv12Ty+XsinyhUGg9Zt4G0H9LS5PTMSb1WOzf
      7evolL99/WYG0KlsEwDT0mSxrVOabvI3H8vncnZ0Ys4j31RePpe3afK5fNtj5qc55qTUkcvr
      Y05a/SZNXufXdeZzKcd0/nxUvxlCmTS5fKtt+Sbb0tIYG3P5FNtyTfWnnX9KfjTZH7821ram
      Y/nU+k2+yJ7WYx3axl6/KE9z26bm15jrn37d25+b01J/a9m23XJRe7Rev9b6I9uarm28bc11
      07+n95FkOzan6XQs0Y6pPqJz2blczs4AFrqPK98Y+Z9MAaC/fxD792zBjx44hKFV7ZVAG9VZ
      nBkeRn8/MDoxDeGWcbrhY+NlV6K/fz12bazgxZeP48abFudNIoIgiOVEsyREGiL2cVmmAPCu
      992JTZs2YsfVo9iweUvbdANDa7B375rYX9YhHi627bwcJCRNEASxsHieb1+bbef/Jydn0Wis
      Qi7nqOeHQZjtLaAnHvwBTo9XsHnrVuQ7iBQRBEEQ3TMzW4Hn+Vb+IQ0jFxMyDtdN7vbXSfAt
      DFnbMrPtCCY5/urP/whr1qzBdbe+Be9+y62ZshEEcWFREhLnt6czofB85WQdx2nR5/H9cM4P
      yYxWvxSyraimlXPWz0CEEAj1mzyu6ydelQ8Dhno9vRzGODxPBYmQsbb6SpkCwJve9i7M1Jnd
      EYxYGIKQ2Rshk5ogQcSQUtoRox8kP+iTUiIIQ3DtQKSU8D31BXNfn/oSXAm9BR3vu/gXuWYU
      2elLcAPnAvW6B8YYgiC05QDRA0kpBcIwtK8BZy07jYar+tFA/4qk/ULCt/XP/ZV1uVKD7w+h
      v78EQDlkU7Zy8hz5XM46ZYO6DkobyLSTatvIgRvnbh4CB2GIWj39pRqj9NlJTG4hyBQA7r77
      btx6YC/O1HyMPvFT7L/yl3tm0HIiDBnqDRWlmz9yIpY+Qgh4ftBRvVIIaZ2s+X6hVMouxcG5
      QL2hPtIzGvDGgQoh7fQ+CBikkKjpEaHQI/+4NIPnqw8DA/tu+Gq4XgA/CDE9WwNjreJmUirR
      MxUAko6I6wDSSWhNiEgLyTiyQsHRZUsbnFwdnDrJbNWaNPBDtgrTM9XEqNjzgkQaIQWCIEwE
      OS6EGk3359p/Ie8FmJmtAttbvxK35XAB30+2VxAw+82Gp6/7RS8GRzuCKWYrDXj+SuTz7e/S
      IOSo1X0AA/OqgzFuO4PBD9qv4XWDNJ/ZzoO4dK/5+tge45Hiots0yrxQVGrGWaztKp+RFO7v
      oJdkv1CWSrAtDDkqNReM85hSpxpBRqNsYZ0ra3akXKCmv8SOf71eqbngfLAr+88X49AYE5it
      uGCb+9umjQe3hl6TLhbmdilZ5J6NCmkQcpQrja6daMg4pmdqqfaba8JYn70WjPFMdl1qZAoA
      d/ziJ/Cj+7+JG9Zdjje/7oaeGhTGLoQZEXt6fW1ypobGRjXFK1cbANYteP3G2TIu4Gthrply
      Ha7XdCNJoNbwMTpZAbAd0+U63E0rIIREreErHfGm9TkldyE6PkgPdQCo1X2MTZQB7LSjCvOT
      5Rw7mstCoEeJaUoIQZPOj6vlI0p96tYQUnVEJTvB9NJC80hQouElR1lhOHeHVY4jQBAyzFQa
      CyLLoYJvZzztiKVUHd/3QwyPzSK4ao114GaNV4ghNFzl5CrmenaIoea8J6ZrAIBr1pfaJ5Zm
      a76owIvdCXWSqu4GM+BYKHG5uVABYPnNwDO9BfS3n/8vmAqKOPvcT3Dvvz7ZE0OU1LISeTPK
      imaw6rdR6mNctDjCkYkKag0frhdgalZpDjXcAGHIMVtx4fkMYciV4wmYdRijE1XU6r51sgtJ
      rREgCLne0YfDDxgqtfnvrMaYaFGN9PxQS0NwK/7W0KNxI2NtiMspGKEzo4bp+SE8P0Sl5qFS
      8/RILP0hopkNdFq6kh06shpBhlY0DwBmqy5mqy5CzhHGRsppdqhgxMAYR6MRpF63uJ6964dw
      /RB+wKzGPmtywIuJlL2XUyaITmSaARSHNuItP/cGFOT1uPsff4LyLXuxetXCTk3DeUzB4o7Q
      y/AUPl5XO6G0iwkWW4M05y+k1LsaCTuabyYuImeYz8qQmQ1k0U1Xa9IcQsbllNuvr5opP2MC
      M2UXwcZ+uwTl6nNWa+A8s+1uF7MmglgOZAoAWzcM4d6v36My5IHv/OtD+JUP/EJPDeuWdrME
      giAIIp1MAWDt2rUIj6udwK698fV46+tJyoEgCOJiJ1MA+NmzR/Gbv/Vb0VZsBEEQxEVPpgCw
      ynHxH//wD1EAcOMb3o73ve31PTaLIAiC6DWZAoDftwZ/+B9/BzT+JwiCWLr4fgDGOQqF1o3D
      jVIo1x8QSikzykHzKv7TH/0xCg5IC4ggCGKBUTvfZXyJJWW7VtFBScDspW7TajloKTPOAD78
      id/Cyy88h8E1G9A/tGbuDARBEJcoRqcnTicZ5mbiQm0GzpVIXCdHnvySX43ms8jHmLLTyBQA
      /vErX0DIOFZdfj0mzk3hro/emSUb0QVm6tbXQWaCIJqxH/HJ9B3vhRaMk1lHl01IqUeXiHwP
      41m+9pUt3/UY2YU+KwZn9jqO2TvPV7ltGR3WqbN84Gk+iDTFSCBltN1e3ycuKSGEsPtZp9Yl
      2h9TH6m6CBlrkX5eSDIFANf1sWP7Zhw5cQz9Q7Sly0IhY5u3d9IBJ5YoKVIOHZPPqwqlYiml
      tBucx76FbrsZu4yt8zZjvqY2Am9zaUQJ+7Vya5q2o1U0BScJcKbVRHPJL7xVOclN4FPL1IfM
      aFatZ4vESLh5GUXqdNBp4yh5lWbxu6gtjN3tmkZIYTeYNxhJCSfn6GvW3skvBTINN9/9/g+i
      HuaxbctWfOCON/fYpKWLGWXFJV4NC6UlooJCspyQsY6Ki1k5nyBjgpWxLyHJIKRVXAy1HAXn
      4oLe+NGoeOHzCSF0W+h/6y+yZdzhmbRGj9+O0CWElIk1WaNOKfQSgBBCBRcmOvnleZPlHKUU
      CILOSqdRADIudv7tnlJ0y/aGLWXr9k+LrHEV0zTMyNxoPi1XOfZMAeCb3/4e3vfBj+Ddb70J
      d3/tvp4a5OtNF7j+zB+IBNrMxZRNHWgumh+CpGGcm9HNCRlDQ6/TKY3wIJFWaaRHI5bmG0jK
      aKRibFf/J0f+Leh8EtE5mmml2fVHBaDs6ogmn9KHbx2xxDtJiwOLOff4yLHZyTUvM3DBwQW3
      0/z0Tip1u4kW6eL5ksUBcc7V/1rN0qhwRtdHafRwPXpruFqpk3H1f4fgZhxhGLKWTUOaCRnH
      5EwtcS2bg+vyZf7KtfOh09r7pcycS0A/+tY9OHToEDzfB5wc3vm+3shBz2cELbSYVxyu190c
      wDod8xDEiLHlc7mWNTwhZM/uNxMc7GhJdp7qzkXaGmTT86HEBh7NxOtn2pkZwbQoTQZ9H631
      PpcYXPMyidGVNyPoeHAwcswrtGa+lNI6ZzPqbi5fymjTk1YbIzlmo3+0lKfkBLGYzBkA3vqe
      j+D6196G733vh9h/4ObESHgp0elJdzNpgeNiZL7ri1nfHlhIzIYoMmPbx60zwdkso/gxJdQ5
      lq8JguhApiWg++69D9ddvR3naj4e+/FPe20TQRAEsQjQjmAEQRDLlEwB4D2/fBfOnT4JURzE
      zm2bem0TQRAEsQhkCgD/8o9fwasTNTCviooPHLjtzXjfz7+u17YRBEEQPSRTABiZcfFbn/40
      HD6LL331XzF89GmAAgBBEMRFTaYAcPD6K/CH/9dnAObj7R/+BMaPP9druwiCIIiMuK4PFjKM
      j8+gXt+I1atbt+yt112Egfo+ZXa2inrDzbgl5K6rcMXuEXAhIf0G7rzz/Qt+AgRBEMuBIAxR
      r7uJvzUaPsKQo1ptwA9C9BVbXXO97iIIGQDZkt91/cQHhYEfolpt6LI9hCGzP+Nkeg306/90
      H2R1FjfccgAT041MJ0kQxIWHc4563V3Qj9/chg+30VmgTHCh6l0ACZMseK4PbwFE0+p1TzvZ
      tGNqBO26PqanK4ljExMzqDfc1HyGkZEpVGuqDFVPFAiUA2eo1RoIgtCKwBnHHdUf2vz1moux
      sanUuoIgRK2myk5z/IZs+wH0D2L/ni340QOHMLSKxOAWCiULqz6sq9VcBEGIFaW+C2wV0SvM
      tR4YWJE5TxAyjI/PIggjVcicVtP0gxAjI5Oo7l6FkZFJ+MFuW0cYMkxMzMC7fA3qdSVlMTk1
      CwDo71f1c6GcdBAwVKqN1A/0TDlhGGJysqzzzS1DwnUA8NwA4+MzatmhXAUADA0O6HMLMTEx
      gyAM7bmFQXv5DCOh3NDBR4hNWkNJwDXyyk3b1oYBw9jYNIJALXvMhXGWjuOgXi1QhzMAACAA
      SURBVHdRb7iYmJgBEAUHU0Ot5mJ0NOmAJydn0WisAwCMjU2jtns1xsamU+tSjjw9aLCQtwSA
      XpApALzrfXdi06aN2HH1KDZs3tIzY5Y6I6NTqO4YxODK9h04CELU6tlmSfEA0IlOEbwb1Doh
      B0rd5xUi0sTpdEOa81mx4sIGsiztmoavHUlpRftGMgqSjDFMT1fg+xvRaKi2MaNQc/6McczO
      1sAYt1/R205/7WYAsA5MCAFPpwlChonJWYS7V9l6XVcdy+Xbax5nOW/XVddP6NlBEKjlAs44
      JiZndf3rMT4xg2DXqrblhCHD5OQswpBhakoFh3Vr26eP6m8dqXv63PJaDj0KID7Gx6cRhDtb
      zs2I6MVnGebcgjDE2NgMgl2rW+oKdFBYlVuFSX2+tbqLIIyUQc0o+1InUwB44sEfYP/t78Hu
      rVt7bQ8qeg1MigBjEypyjo1Po7Z9JcbGZ1DbMQgppIq8+9oHI98PUa3WAQDnRiZR2dLfsd6G
      6yFkDBOTM6jvHEQul7NTKLMuZ6g3PExMzqJWW4WR0UlrY33nEJycGjk0XM+OuKq1BoJgFYZH
      JlHd0o9iXxHVWgPY3BpIXNfH9EwFjcZqe3OaADA1XUbDXY2+vqK90bMwNV1Bw11tp5mJ8254
      CWE644AcPZISgqPecBHqEagQAvWmAMAYx2y5lghoxklyLlCrN1KXIIzj8zwfo6OTCIIdmc+p
      HdMzampuhOmMI4nXb4JpEIQYGZ1CbeegHqXutOdvnBTj61Au18A4R7lST63TBMf4SDRaRljf
      1tZAj+C9bSvhab2i+QaupcJsuab/tfa8yjH32WItIdXrXsfZx6VKpgAAyfFXf/5HWLNmTc+2
      hJyZrcL1hrrKU6+7GJ9ITq/Gx6dR10GiWkuOxMcnplHfsRKO42B8YgbVrQM4NzwBYK99it4L
      zLqeQa3PNQCsm1d5TDvjIAxRs2uIHhhjaDRCnBuZRHVTCSOj6euDlWoDZ4cnAFyNhuvB9QKM
      jc8gCLdaB2SWGcyIP60jBkGI4ZFJ+CmBzGCWGcKQqQ4d02BXDs9PBKCyXibI5dWepnz3ajQa
      HlzXx7nhSfj+JjuSDvUoub5tAGPj0wjC7S31G0cihLBLEB13DSGIZUSmAPCmt70LM3WG/Qdu
      RnFoY69tmhezlTo8v7sAcrETaKcKAK7XOrpfSnARBZLmTTg6YZeeYkHC7yI/QRDtyfQW0N13
      301icARBEJcYJAZHEASxTMkUAA4c/HlcfxuHUxoiMTiCIIhLhEwBoDxxBg88ehi5Qgm3//y7
      cN2eXb22iyAIgugxmZ4B7L7yGlx9+U6woIHTZ4Z7bRNBEASxCGSaATz95OPYdtUBvOOODzR/
      aEcQBEFcpGQKANXZcfz9P/wT1m7egL233YGPvvf21HRScjz75GMIihtxy4E9GD1zApMVD/ni
      Cly75wo8/8xTcBwHG3buwea1Kxf0RAiCIJY7Qog59/s2e4JLIbMFgHNTHn7pfW+Gv/4qHH/x
      1faVhwz7brwejzx0FABw8uwYDh48iKcfexRToxxi1S5cf/kGPProo9h88CBC/em1+cm1mh1n
      HEJ/yen7vv4baznGOEukYZzbtEI3QnN+xrn9yrVTfmn0Vmz+6Fj7/Aw54STqay6bcW53MTd/
      i9dhZlimvtb6OUTOaZvGnHen/GhuG21HGIaQ+n1789a9vTYpaZqvWzK/05SG2d+NjeYYi5Vt
      jqG5Dh7lb6k/zf6mOsIwjH1w1mwbb0kjU/LLpo/hUu0XKp/jiJb85pj52W3bmvseor39skPZ
      oo39nfPHr5tuG5HWtvq80f66mfrN/ZvIr8t2ZJNtKfabZki/ts35W+s3x8zvrf2f228FW/sR
      ix1jTcdMH4++x4mnkVKCMaacr5QJ/yGlBGccnAuwkEEWci31x/NzzsE4g5TqmOf58L0oDaDu
      Yd/3wRi3MheMMyDWxpkCwIc+cCcGVg3hRz/8Me784Lvapsv3lZBH9JGOcZQFB3ADhkIhWV2x
      WEz8zBfy9mdOqAYolUr6b4WWY4V8IZGmkM/btDl9QzbnL+TzkV2d8uea64+OGSfdmr8AR9/c
      pr7msgv5vGl/5HI5cM5RKpUghEAun7Nlmvpa688j5zht05jz7pQ/n286pn8vFotw9Hmb87fX
      JiVN83VL5nea0hTs78Z+c6wQK9sca60/yt9Sf5r92kvE7zFTpunBafabNMbJxfM7ueQjs1T7
      c+n2J4811d+pbfM5CCFQLBSRc5ratlCElBL5fN6mMfdfoVhQ95STA2MchULB3veO0/78nSbb
      ck4Ovh8gn2+fP35uxv5CoQDOhf2iW13bnC0zbn/83EznSGsb06YmuCfqN/md1vxSSnVuTrJt
      m/t4QafNx3xELp+HEBKlUgmcc+RyOTi5HKRMHpPS2CptH5dSJvyAyQ+pxmDm2qj6pdVByufz
      yOdzkFI21S+Qy6k6lJ1JH2OuYyFfQD6n8ivbpG3HQr4ACeMjCtkCwJkTL+F7P/mZyrZyU2Yp
      iAI46p6PmVBg/7bdOHHoBdSHdqFvcH4SCBcaM71yFuhBSFw7JwwZBBdAcUGKXnikBOfCTB46
      JDMJLuzDornsXJA6ADuaa9s2Uo80pRIhAyIHHiWR6t5CrP2kkuHgQiII1MzIjIadXD7KK5VD
      ZIyrvCa7kAgCNRM2ZZpRel6LyUldhxSqbInYCUhzbipfwrZ43UKdd9qyg5TxNNKWz2K69QYz
      A+CsSXLEtp+0QdmokUohEYYMUkTnaPtmzH51bWTMRploq6TNyk7HpBPCtntLWiHbymxLKVtm
      JS1p0OE+bdOmC02mAPD4c8fwe7//vyI3R59uVGdxZngMW7YMYnRiGjff9jqcPnkKr731NjiF
      Am45sAdj03XcdN3etmUoWWTVUYz6odR3kut6YCFDTkfHrAgh50yvLrzSt+GcQwppNWdU/uiY
      g3zLTcEYhxACjnQQhlxr3rBE2aacTr6Rc94ilaDKjuxP64ydMJ08DDkEl8hH/iOlU6d1ZAku
      pBUsa75rZcxJCeOkzDlqJ5DW2YBmB3L+N7zpkKKDZLGIddrISSgHavSgzMgVpiPHztl2eu2U
      uRDwfdU25jrlnGgpKQyZdghJJ2UDiG4/49CU/UL/LWbrfBulA81+0Fx/CR3UOtQqY4HHtEmW
      wZHIcO8ax63aQQeyNjZ0KAVprRYPavFyFmHMsOTIFABkeRj/9x/9MUo5dBSDGxhag7171yT+
      dtkVV9p/9w+uxmWDrfKsQOTklPMVgOO0RFDOBYSUcHSnFEK0jCZMsBAyitzGoZv8Ocexkd7c
      QMZJGidtRmWRbcmO2HzfxW8gY4PtTPp3GyQcp/3IAa03dbNvNOcSH2VY+81IMTaC8P0ATDs4
      iaRtQkgIrhyYjLWnsc90xHZDlUQ7JnpU65lF7aL+IqQOSlLYDmnqL8acpBDKSSpnEy3PKOcQ
      c7xmyNnUduaaCq7bIwiMRdHoNGaT/of9vXkk3Xl6oUe5bUaNzUkvNcezGDMvYuHIFAA++Tv/
      AS8fPQYuJNZu7M1+ADKl886ZB1EWV8s5GyePTsV1X9WSRGinCJjZiQouc52bkMmpa2J2Eiu7
      V3TaUMRUGw+mZpRpZgnmIZ61M6Opl5arJYjzJ1MA+O9//Zc4c2Ycl+/fi+K6ffjldy89RVAz
      AiYIgiCykelLYJZfiTe//jpsuWIfZofbvwZKEARBXDws6GugBEEQxMVDphlAeeIs/uLP/wyl
      wSE8/9LJXttEEARBLAKZAsD3f/oz/Jv3vxVefgVOvvhCr20iCIIgFoFMS0C37L8cf/nfv46y
      X8An/u1v99omgiAIYhHIFABcZyX+8I/+HNKdxIOHzwLY2WOzCIIgiF6TaQno+WcPw2cCgd/A
      0WPHe20TQRAEMQ9YGHb8Cr6ZTDOAD77v3fiv/+WzQKEfH//kr83bOIIgCKI9jDEIIawwXBrx
      D0ANnuuChQy1ShWBH1jBu3iZtXIFgVYVrZUrYEGQUQpCSnAWAk6JvqUkiCVCXB74fNJkrcNI
      E2fT8lFfbEvZXhBNSokwCBO2zSWg1g4jgVzsa6+myFNE6JoJgxCCC+S0smbc2VbLVfh+AMdx
      UClXE/nKs2V4nh99kZ8inFar1REEASAkapWqknTRZdeqNQRBgEatjjAIkMvnrECk0Yeq11Qa
      KSXchovA81HVdgie3AcgCELUanUA0GWGNhDEr2mmAHDft+7Hb//efwDq5/DVf/oOPvWJD2XJ
      dl7ET3ypEEXnfNs03dithN+ULo3r+ggZR6GY6ZIsOnFJhouBNMXJhUbKSCeqRU3TponaLTQi
      f32FlDRJJ23K5pyj0XAhOLfihJ4X6VfVag2EQYhG3VW/1xvqmBBoNNzEMZO/VOrT+TlqtQYC
      P0C5XFV69CxS2gyCECxkqNcaEJyj0fAARE46KQan8pm+wRhHtVKD7wUol2tgsfxGhpkxjnK5
      CsY4XDe5N0Va27g6f1zv3tRf1+fdx0r2WBgyhIyjWq3bdowfY4y1CC+Wy1V4no/+gRU6P4Pr
      RvUaLS+T1zjZMFTHZqbLcF0PhUIB1WodgR+gWqmpc2NKk0xpbjGEYQjXde2xuPyKyRcEAWrV
      eH5hlRaFLicNIUSmgJfJ22xbtxL/+I17gfIZbLvmzVmydE0YMnAhrBoo5xwV3XDT02W47iZ4
      ntrcwAFaomMnyuUaPD+wgnO5FP9tlD5rtQaCIETOcVCrqYtjoqaxTXBpyyyXlY31uupsjAuU
      yzX4fmDtN+dmfuYcx964IiZsJqXUN5ULz/UxM1MBAFQqqrzZ2So8L0CxWOgqOBoxPHNuhULU
      AM2Kk+kdkOsO7KqpZE11NmE7EketppyM6chmBGQ6W9qo0ahfCrFwwaWhO6txdlJqVU0prP5R
      JHSnnAtjDNVqHYwLK89tnGTcyVSr6rztpj2cq+secrhuAMElGg1f5y/auhoNV2tUqXqNI1T3
      eB2BH+r2i+TBheBwXReMCys1HQn/tV4j9bdoRAlp1DwjTH7P800ScK4CmLlGDevsuHLcHZyI
      EAKNhgchonZrlnNOm0Egpf+1qOvq/u8Hob23TBpjkxACruslZg3RNeaoVhtg+v6M31rqWB31
      Wgmzs2oEbfqGwfdDVCr1tudu6m/XPuZYJye9FJgjAKgO+s4PfRRnTh0HSgexa/vmnhhSrTYQ
      +MoJi6Zpo3GckZNkqNXcxEUyInCu64OFqsOam9JcCHWMgYUMs7MVeN5GewPMzFTg6gAjhAD0
      Zi2m/riEsLmo8QBkRehsmmjqWC6rkZCaAobI53LWCTRjtNlNwFD2s6iTcgGfq8CTmB7WXQR6
      Z6aZmUoiAHmeCn4mAKogo5zZ7GwVfhCiXneVrLFuMwMXQh2LnX9856RKpQ6m5a+NhLBqANi2
      L5drCEOmHbFMOMBqVXW8RsOD4AKBdtzxXZYqlbo9H6bbRtkhUK024AfqPmC8Vbs97shMcIor
      ntZqrm0bKaW9ziat4OqeEjy6nrkOr06Y+rX5HUmbVXXzAG8p0k47v1sWe8bZrPi7XJgjAHB8
      /atfwsNPPYvrr78erD6F4vbX4td/8e2LY10X+H5gt1QTRhK6zQXlMWe61JaZusHMFoCYHLQ+
      p86jk+RDJDuC7GFnY4xjdramlzXadzRuNv3QjsQ4AnM+UgKBH7Y5dnEsTxHEUmGOAFDAr9z1
      KZTrf4Zf/fhdKAbj+NI/PrQ4lhEEQRA9JZsY3J3vxV997rNg6MOvfOKTvbaJIAiCWAQyfQg2
      fO4shHTgyBAvvHCk1zYRBEEQi8CC7glMEARBXDws6J7ABEEQxMVDpgDw67/3Bz02gyAIglhs
      MgWA73z9y/j29x7C2s0bsPe2O/DR997ea7sIgiCIHpPpIfDZKQ93vv0g7vrd/xnh1HivbSII
      giAWgUwzgDfcdiu2bN2IL3/pS3jTHb/Ya5sIgiCI+aA/gs3KHAEgxFe/8AVUtETGioGVqMzO
      ALhs3vYRBEEQ6Ugtd9PphUuZonIQ+D54G80hKYTShtKSMubfnPO5loCK+OinPo2BgX58+tOf
      xm984kOYGp/p8pSIdsSFoozOEUEkkBJCC71Ff5L2f8F57PeU7EKABQGkFFqJMkWUT5fZTutd
      3ZtKWE9KASF4Js2i5vtZ6v+E1vUCpE4TOzchEuKECTukzCRF3WKHriv6v6PRLXmFliURnNvf
      mZZlNrbyMLTXQhUjrTM3fwuDwIrvGQcc+L5NDy3JEr++8fxKJ02Vy8MQIqbCapy8bSvOEWql
      YVOnqcNeb2SUg968UuK/fvEr6PPHMXTFG7Jk6RpzcsZQCZloTMSOOR3jY1rZIvXGT8PUoaSa
      w9RjMvZvE4lF7GILIRL2G32iZifPghCuke9lTN0wuVxCFladPxJ1Ok7vPsgwHSzXVIeSBw6U
      bU1NaTo1JKwkcrfXaKHIep2TmWBHRu3O3yYEYPyT1bNPOLSmHFIJ3KmfYdOx6JoanSNz7U3Z
      XHdkISSYvh9lrOxQOyKDEVI0Sp8JB8KMhlLB1mE1oGxfi87VOGqmdf2b5YWllPpYTOlTK82a
      sk2QQkxoj0sWL0TZbZQ+w9A2tQlK5ifXul3R+at64+fPeUwqOgzVOdh2QMsx68C1Yq41Szvp
      uCNtPneTxvxu/26cuVZBtfLZMScd9xVtmStN7Nq2s28uMgWAd334f8Sxl5+D7wzgit292Q/Y
      iLnFlTfj8r1Cq4ByLlDQmuNCJiVihYicrODCOvBAR16juZ9z0BJkDGZDh1zMESulzeimjUs7
      R4qdUf2MMa3qKZrOjUNwAa5tSkPYjoOWQGDlpHNO1LmaAxBky81lpK4N8WNMa5RzHjkiIHKA
      Uqh2VM5AjRqMk1fXJLT7Gggp7LXL6R2NlByzcmAmeMY7ixGuM+fMmjsUohGoCj6xUWCKk2BN
      QnORI4zLIFtPYEdHLGTWMQBAvmCcZCQnbfKZc5QyakvjpM3IOAyjNJH96m8mgCv1VD2q0yMy
      q8cv0XJv2s1VnA4T95gDT50SoKncdnVkwNgYt3W++zC0BE6tLCtk6wwoma8l4iZs62R3vEzf
      D6zKrSl3OczIMwWAL/7Fn4CvWIecA0xXbsObbjvQa7uyEbvIRg7ZBJA0526dpOPAXP8sF5nr
      qd+CmZ3i3LsrICrDdDgTuMzAmwuJMIwUNeO1xZVCjQMLgjApZ53wEW1stU65g6k6jQ06MgqM
      8aUH0yFlrAObuo0cttHFZzYY61GqbL8hS7ysaCMTa36Hc5OJNN1erfO6vgSxSGQKAOs27cAb
      3nEHSjmgr9Tfa5sIgiCIRSBTANiwdiW++Y17AAB7DyyhGQBBEAQxbzJ9CLb/ugPoX1FCX1+f
      XX8nCIIgLm4yBYCv/9N9kNVZ3HDLAUxMN3ptE0EQBLEIZFoC6u8fxP49W/CjBw5haNW2XttE
      EARBLAKZAsDHf+1TACR2XD2KDZu39NgkgiAIYjGYUwrib/7yL1GOfb+y/7W34x23v7a3VhEE
      QRA9Z44AUMRd/+5/WhxLCIIgiEUl00NggiAI4tKjqwAw/eoL+Lt//tde2UIQBEEsIpkeAjMt
      ajS0dQ9+cevezIWPnD2FSt1HrrgCV1+xG2dPn0C55uHKPddgRZEmHwRBEHGMNlWuw/dWRjur
      JZ+UqNdrCMIAfX2l9LKNnpWWxckUAL76hc8hLAyBudM4fq6GK/ffgN/6+IfnzHd2ZAK33HKL
      qrwxhTNTPl534Eo89sRhHLzt5ixVX9LEtWiyXHji4sYIrTlOF9fYCvcllSrVP2AVLTljCUU1
      GTsWBAGkkFafSOv0WcVO5VBYW10ko/RqlEbbicw1Ga7K1IqicTG8uCJmJGoYaVO1w+ZPEWpt
      FiG0ViTEFecWqjOqvE7OiBnGRBV93+qCea7bJKoYapnsuGhgTA0VQBD4up0B3/MS+d1GHWEY
      wvNcMMaQz+etmqhx9m6jDhYq9Vff98AZQ+B5ibJNmyuBRl/b7YFzZtM4cBCGAQQX2QJAwHP4
      1U/ehb5gHF/6h4dQ8LLtCbB21UocefklNEJg9yqOtVt2w8mXAKGUMEOtvBiGWvY2DOG7Lnzf
      B6SE12jA9324DRe+6yltc8YgBQdjDGEYgjGm0gNWSZFxZvuL7/s2H+ccLAyR106WaelY3/dV
      eVr1kmlt73q1msgfuC4Cz4OTz6uO5XkItL2+68L3PDj6JvI9z56LlBLMqE4yBkereZp6fN9H
      4LkIfHUxzTGuj1mb9E/HccAZS9hvzsfIMBuZWt/3lX55GILrNsvrm9uWzY2CZRhtKqEVJ4NA
      2RgEAQLPg+8H8F1z0ymVVTNDDMPQ6psX+oq2TKN/bn43DizUZat6uVUdBWCvn7lHeMxG44hS
      j+k2MfdCEAbKfn3DA5GTCQP1t5CFWtEzjNQ49T1sNNzDIIiUSrUjDQIfge+rY2Fo2yNeQBAE
      4PpYqNsmXyhG9WslUXMf2U4bqHIDU7Yf2PONHIo65vs+PLcB3/fge67NzwKVR0qJIAwQhoG2
      P3Jogech8NW9GvgeQl+l8T1f9T/PAwsCZY+237RjEOj8gQ9fO6JczrH5zf1v8hvbck50/5k0
      gVZqNfieB7dWg+95CHxfpdH1mwDgez7cRkPZqssuahXXIPDVPev7URmxtgk8L9FHWRAgDAJ4
      rgvP81AoFGz7h0GQ7IdGATYMwFkY9XHGwEOVHlKq/Npu60fCSCI6DALlK2J9VN3PDJ4r9LlF
      Psb0FdMAoRZJbPV/HHBUP4vsjvUL3X6Ms2wB4IN3vgef/9xnwdCHX/3EJzFy6kiWbLhyz7Vw
      HAdPPfIICjt3oj48C2wbtCdQLBbtT9/17Ggnl8tp/XCOUqkEwTlyuZzawcZxILhAo1aHEAJu
      vYFSqaTklR0g8AM4cCAEt8e4zh94ntXQdhsuHDgIggClUsmWx4IAjuNYJ1sqlcAZU/Vq28wx
      JRktlI1CIK+PQUp1TNsPKZHP5VTZACCVnSYQlUpqupbPF1R016ML33VRKpUQapt4GFo7vEYD
      gAPfV/YzxpFzcqqz+yp9qM8t1PW6jYbq/LkcfM+35+ZAOaNCvmCdnJmJFPJ5BH6AnONACqE7
      mB5J5vPwXdeec7FQtMeMdnuhkI+CkecjH6sjn89bWWzPdZHP56xzM07a1A8oh1Uo5CG4OpbL
      5eE2XNuehXzeOidDQddRyOcTMtTqWEG3jaMGBoUCuBmJhtE5Bp6nRmT6nIycc7FQhNT3hJQS
      xWIB0gQAk6ZYsMdyOvCaDqicTHRNizowxMs290ixWLTB3YxOTf8pFKI0JvCYY/H8zfVHaQpR
      Hca2YgGC89T8ZpBeKBQghEChUGgZlKfZZhy/CRLx/u/ov5lyCoUCOOfI53L6voulibWf4ByF
      QsGW2an9TP3GbkDNCkqlEqTuo4C6Z3K63pY+Wiggp/Oadov3X3POpo1a8+cT7dd8zJSTi9kS
      T1PIF6L7J6Vs8/dCs22m7ELe3keFfCFbAHjiZ49hy+69eOtb3oxtm1Zj16Zbs2TDiWMvIRQ5
      5Fevx6o1O9F/5mm88OwUrrjmukz5u0FJDsc2aolNnVrTCjv1nNcGIkuExGYTMa39+OY0c+WL
      /62jrvMCYJYyOm2CEd8QRf1Mbr4jJWKy1TLapUkfIwgiO9k2hPnQRzEx8iru/tLn0Lf9tfi3
      /+Y9mQq/cs++xO/7rruhewsJgiCInpApANz/ja/i+VMTuHL/Qbz5Tbf32iaCIAhiEcgUAN7x
      gf8B73SAYy8+gyNHT+B1N7+m13YRBEEQPWbOAHD0ucfx3R/+FHW3gZmqxP/y+yQNQRAEcSkw
      59dYD/34Byit3oIP/vIvYe8Vl2PT2qHFsIsgCILoMXMGgLt++3/HL733rThy+EkMDx/Hdx54
      fDHsIgiCIHpMpmcAazduxfs/9Ct4/4c6f6lHEARBXDx0LchjPoIhCIIgLm5IkY0gCGKZQgGA
      IAhimUIBgCAIYpmS6SEwQRAXK1pqeb7vbsQ0mBaDTjpRFxqrsQVppb2bj3VCSmk04CGlaNHy
      gsymycW1Om+LjLZUe7cIIbSNSe1/JWUtISHAmFIbXjIBwGhnqxORCTEzpWPNE2mkEDZdopyU
      C2EvnP5pHmSniaLFhdSahdbCMIAQ3Ko3mmMAbNmc8xat8EjzXCQuCucskoDWOuTQypLx/EJw
      SCkS+ZtvESOK1nJTNZ1Tc09uEYUzYmyOqSeym2lp4ajy6DqZczTHJFrF3FqJrkmzUmdrUn3N
      UzqHRCQ0Zzqmkb+F1PLHMtLjj7ehvd9M2TI676hqGasJCVu57nBhk+a+eVdCCmn1+JmW6y3G
      teb1Jh32HjFy1FJouWiuNeCFlf+O9PQFuJayNpr39piu10hZq7Q6v1aRlDExPZPfKLWavQaE
      lGAsTOjS2/bQ5w+ptP8BIO8UbNlmrwGT314bFssveKz9I4lvU4/UEswylia6GsoBSsjW+1bK
      qG1YaB2uOcbCUDlDY0qs/wop7dKI3WsBsFr70T4K3Nqr5Nq5bXMHDjhnVkJa5ecQ0uRnWgJf
      Kd02+yh9d6pzlK3CjdL4Dy0fHu/jUl9/c71MUIjKND4t44Ywi4HRXZcpzsL8LdCbIBjN/fiG
      KixQuu+hvQCtx0wnc0xDxy6uwTrieP2JoARIwfVNFTkuqy4qhd0YwtwcgafsNpr+Rtq5NcjI
      yCnE9MGN/fH8ACA5Bzd7Kug08XOI/242BzF12ptalym0AzAdWcbssvn1jWk31tDOVXCOwFP7
      NRg5ZesApZLYjpxMtEEGZBS4mjfPyMWcJIvtKWA6tjoWbXpinETkpJL2SymtnHPsysZGRwwJ
      ddhctC+BHZ2J6Fqbg9G9oToY07YZ6WEzWoyPyKyNQurAkXROutrofmsOjrHu0X7kqG1qTouW
      MQCiP8qWe781TWRA5EjiA6GYjQnbUs4jaW16lYjOrV2aNsYm+m2z+c3tacr2xwAAIABJREFU
      FfX75N/j59ZSg2w9Zq4ZnNb6lyJLJgCcL2mj20udTjdn54wXtq2yVR0b57UMCJbXdSaIXkEP
      gQmCIJYpFAAIgiCWKRQACIIglikUAAiCIJYpFAAIgiCWKRQACIIglikUAAiCIJYpFAAIgiCW
      KRQACIIglikUAAiCIJYpFAAIgiCWKRQACIIglilLRgzOiLklJJOtamJc+llCwlFSYXIO9cJY
      2fH/U9PE6rByzLH643LOUjpRGqOaaezWYoLNEsfN9QsrURxTSGzKl7Q/dsxxuhKBi+pIl1NO
      TZsihxwpP7bPl1a8ydfydyTbaEHoUIypo3lf64Qd6HwezVXF1TBlPJ/T2n5ILTvetjGRPqtC
      KmPt165+rW6L5HVrvlDJ+yCqI+2aGhnwZL9ro6oZN7uljSLp9vb2txxKKHY2K44C0fVL6yvN
      ZZtumVD5tH1KS67HFVt13aJJHdS0tZBCK7o23b/xU0y0rfpjGIYQXKn5Sn3ScYVYIYWVbs7n
      8i0+Ji4nLcz1jrW7keCWQsRsjDBS15BaNVcupQCgby8ly6u0743WdXTi6oQjrXURkxaW0U8p
      IWNOMh5QTOMZ+eAWyWTtJONa20YqNq7Zb+qPtMJ5azBq43iNtHOzA5SmC8+12YQUkEZHPXED
      xf7NOVgQRGVLo2Eu4TjNG1FEevjmHIQVRI8FQNmkqw9p2xQttuei/KZ+ZiSXo/Nr7sBRQEUi
      jao/6pymfe0eESagtjgZ01kiXfVc3DYbiNXv5n6wktuQkJxHDrEd1iTTrlEd8UGBOsdkx4zb
      H2m/x+1OOpfIgUebfKgO3dlGe26xtrH7ODSfjpRW8tzm76DCau9D0SS5LY1Ueuu1NucAoFWC
      HVrrP5ZFcJXGBnAJpQwb84T2/O2xuNOP2la1K7dO0vSNqC4lLR9H2dMURJrk3OPHVHmtAcSB
      05I/nsbcx8ZXGR9jg8w8sX0d0bVYMgFgMek0E7hokbGbvWXEtASItXlHXffYCI4giN5CzwAI
      giCWKRQACIIglikUAAiCIJYpFAAIgiCWKRQACIIglikUAAiCIJYpFAAIgiCWKYv3HYBkeOSh
      R7B69RD6Vm/B1bu3LlrVBEEQRCuLNgOoj53E4I592H/9jZgcPrVY1RIEQRBtWLQAwBhDobAs
      PzwmCIJYkixaAFi1ZTcmXz2G+uwY+gbXLVa1BEEQRBsWLQA4hQHccmAPJiocN123d7GqJQiC
      INqwqGsy/YOrcdng6sWskiAIgmiDI9tIRg4PDy+aEb7vo1QqLVp9BEEQRIcAsJhUq1UMDQ1d
      aDMIgiCWFT19BnD62PMYm23Y35lXwwvPv4DTZ0d6WS1BEASRgZ4FAK8ygdGRUYzPuvZvTx5+
      Bnv27UN5+CRq4QWfeBAEQSxrehYAnnnxOK69emfibwI5FHMOtqwbwNis16uqCYIgiAz0JADU
      ps6gEeZw4tRZnDt3ruV4ueZj9SA99CUIgriQ9PQhsDt1BiPhaqxzyvBL69HPyjg5Og3HyeP6
      /dfYdPQQmCAIYvGht4AIgiCWKSQHTRAEsUxZsgGg6jOMVPyLvg6CIIilypINAK9Murj/yHRP
      6zg24eI7L031tA6CIIilyrwCwEOHDsMPgoW2hSAIglhEug4AUkoceupZ/H9f+oeeBIHvvjyF
      Y5ONuRMSBEEQ50XmAMAYw8nTZ/GNb/0QJ06dwZFXTuEvv/g1+P7CBoHRaoCazxe0TIIgCKKV
      zHLQUzNlfOGr30ClWoUQEisHVuCaqy/HxNQMdmzb3EsbCYIgiB6QeQaweeN6vPttb4T5auB3
      f+NjuOPtbyLnTxAEcZGSOQCMjk9idHwS/9tvfxLr1qy6ZB3/d16awrEJegZBEMSlT+YlIAcO
      Pvzed8BxHPwfv/ebvbTpgjJaDbB1Vd+FNoMgCKLnZA4Amzett/8ulchBEgRBXOx0/RooZwzi
      wssHEQRBEOdJ15vCuzPD+OLffh2lwbV468+/HXuv2NELuwiCIIge0/UMYHDjLvz6XR/H+lKA
      z/7JH+Ozf/pnGJ5xE2lmJkfx8stH8NLR44jPFY688CyOHDmCscnZ87WbIAiCOE+6ngGUR17B
      X//9/bjj/e/HL37sN1AZPYXhShXb1vbbNKvWbsTaDVtw7uUncHrKx2XrSwAEKo0Qt9xy/ULa
      TxAEQcyTrgOAFBw//+4P4NortuPZxx7FlbccxDX5ZJp8Hjjy/DM4dq6KO67RO3+JAHknhxee
      fw6Dazdj9/ZNCMMQABCGIXw/UuXkPPoSOP53Q83nqAUcW4bO72E05yy1DsZ4ar0EQRCXEl0F
      gNrEq/ibL38Vw24/Ht+1AceOncX/eevBlJR57H3NAWwYeh4vnp7G/t3rIJ0SbnrtjQCARx55
      BLu3b0KxWAQAFItFlErRFpH5fBRR4n83vDRZw9PDdXzilvPbRCafD1LrKBTyqfUSBEFcSnQV
      AFau34GPf+xjOOv2Y9/lW5DP55FLeYowcuYUyg0fvstw1b7VOHr0KC7fuQUvHz+DvCOw8/I9
      C2X/vGiEAm4oEn+bqIcYKC5ZdWyCIIgFp6sA4ORyGBgcwL1f/GvcPzAAoIjf/Pf/HquKyXRb
      d16GrbHf9+xRDv+61+w/T3MXhrOVAEenPGwbiGYaPzlZwb5N0XOMisdQ9Rm2r16B4bKPoVIe
      Qyu6XjEjCIJYsnT/DCB0ccMb78Cdb7+1F/akMloNMNiXx2ApP3fiBeLIeB1PvFrBb75xJ771
      4iRu3jGEm3euWrT6CYIgek3XAYDxHB5/4J9x5Kkfo90M4HxI26P++0dncGDrShzYNrhwFREE
      QSxzugoAQaMKv7gWn/rUp/RfHAws8KBcCEBKwHHSg8FCIqWEEPRVM0EQy5MuA0AZoyNlHDt2
      xGbfuH0XCj14diolsNC+edpl6O+FsQRBEBchXXnDwQ07cN1112Jtfx6VSgWVShVi7myZ+PaL
      kzg6hwzzeC1EPZj/bmFPjDQwXAs7puFCkNYRQRDLgq6HwzMnDuPIrEStGqAIjr4FWgLKshXk
      j06UcXKmtx9oBSEH5xQACIK49On6IfCKoVVYuWIVxmuHcWREwONAH70dSRAEcdHR/WughSH8
      3MEbsfkdt+DosVPoX7w3MwmCIIgFpLuHwPUyHv7x/ThSWYWD1+3CD775Lex6zXVYQzMAgiCI
      i46ungFIKSBzJQyUcghDhjs/dhc5f4IgiIuUrgJAaXAtDt56IwaG1uF1r3sdrrlyV6/sIgiC
      IHpM988AnCJ+fN+XcfSZh1EqlBb8S+BMNkDSq5oEQRDnSdcBYNXWK/H5L/4NOOcJ2ebFRAgJ
      xhfqCwSCIIjlSdcBgLsz+PPPfR6jNY4Dl23GRz75a1jh9MK0uan6DDWfY+uq89fuZ1yQLARB
      EMuKrj8Eq4ycwJbX3I5rL9sMJ3Dhzv/D3PPm2ISLb780BQD40fEyTk578y6r4TOE8VmF7L0W
      EUEQxIWk6wCw9oobMVg5ghMnT2Lg8uuxdom8BTReD1GPbfJyfNrFD16ZmXd5QkpwmhEQBHEJ
      03UAqI0cQ3HHTfjMZz4DZ/oMahdwBtCJeiAw3kb3p1vnLqUEhQKCIC41ug4AuUIBzx9+AiPD
      Z3H05BnkFmH9P2R8QUbj813nF1LSchBBEJccXS/gDGy8Eh96exk//OED+NDH78JASgiZGjuH
      iZkaytPj2HPDQawdKACS4ZGHHsHq1UPoW70FV+/e2poRkRpnzokiSze+d6Tit+wc9pNTFexe
      U0LNYwiYQD5/gZ5aEwRBLCG6DgDuzFn87T/8M/oHBvCNr/1d6ncA6zdvx5r1AQ7/bMz+rT52
      EoM79mH/5Rvw6KOP4urdWxGGaonG/OScwQsYfD9AsaicuO8r9U/GomNMj+IZZy1p7j9SxnWb
      +5HXUxPf9zHZYFhXcqI8MmfTcyFi+bm1wwQdc4xzjuGyi4GCg/4CBRCCIC5+erQnMMeJY69A
      5vsghXowyxhDoZCsrlgsxn56yOfV8XyhACGBuhugVFKveBYKBQjhIZfPo+Ao71zQ6VWaqi0/
      n88jn88B8PWxOvKFAgAfhXxBzwBCSCcHP+SxOvI6f8Eu+Zhj+XwePzlVw2s2D+C6LSu7bTaC
      IIglR0/2BB4fm8BlV+/F2PHnMF11If0q1m3ZjWcOvYD60C70Da5rKZcLkVhnl0KC08deBEEQ
      PaPrADC0+XL8wR/8QVRASgnr1q7B6VMnMLj+MuzYsBpTU1NwCgO45cAejE3XcdN1e1vy+AGn
      r3sJgiAWka4DQG3yDL5yz7cAAEeOnsBnPvunGGqaART6VuDKq662v69fvx4A0D+4GpcNrj4P
      c5cGRycaODbRwB37NlxoUwiCIOZN1wFgcMNOfOpTnwIA3PPf/hpsGT4Prfkco9XgQptBEARx
      XpzXDGBo4y6sXiJfAhMEQRDd0fWHYEMbtmLNigLqooSNA84l84WsBH3tSxDE8qLrADB14mkU
      d92E9f2ANzaM6XS1BYIgCGKJ03UAWLd7P0YO/xAPP/IIToUrsGGRN4NpQQ/b626AIFyiwkQE
      QRBLkO6fAUycw41v+xB+5/f39MKeVLJo8XCxsHo9UteblbFqgJV9+RYZCoIgiKVK1wGguHIN
      fnTvX6A6fjtKhSLe+Ja3YMUS9HmcC/hBckbAuNIZymPuV5e6/RDtB6/M4votKzFYyuPEtIe3
      XbWma5sJgiAWk64DQK5QwnvvvNP8tihqoPNBSljlT9cPwVgf6l6IgHEUC12vfGWmHvC2MtQE
      QRBLia4DgFebxoMPPggAmJ6u4urrb0Rf7/xpKowL+AHLnJ4LifNRkyYpaIIgLkW63xR+8+X4
      3d/9XQDAvX/3VeQW2fkDydH9fAhCjqobYPOKbHsJC5EuSV3zOWoBx5ahvnnbQhAEcaHoOgBU
      xk7ib+7+ZwBA3Xfw7gVeAvIDBs4FHGd+I+8sWYQEGO++bC9gCb2iV6ZcPDNcw8dfu6XrsgiC
      IC40XQeAQl8/PvDLH8fuLWtx7uSpBX8GIPTbPA6cFmcehBx8Ho57oVC2ZUt7dKKOoxMNvGff
      xt4aRRAEMU+6WsAJ6mU8/OP78S/3/xhPPvkEvvrlL6O+iK/eq715exsAGm6AkJ3/SVV9jpEK
      6QURBLF06SoASCkgcyUMlHIIQ4Y7P3YX1lxiWkCcC8gF2H+YIAhiqdNVACgNrsXb73gfvLFX
      8N3v3I97vvY1VC7iNx5ZyOG6NEonCGJ50vX4feLEs9h8/e3oO/4y1g8WUFiCH4FlRUgJPs/R
      Ps0RCIK42OleC2jHFRhwHOTDCTx99FyGb2qJb74wgSPj9QttBkH8/+29eZAkV3of9suq6vuc
      vrvnPgEMFucs7mN3sVzeXGItMWxRIhle22TYpqw1wxEMKYJh2jTDtkKiRdKWRCosUhZJkYJI
      kCuuuMvFElhgAcxgMZgTc/TcPX13V3Wdeb7Df7x8L4/Kqq7srurpnskfAtFTlS/fe5mV+X3v
      fcfvS5AggNg7AMtwcOTIQfzIF2oXhV+en8FqoYLK2ioOPv4cRnpFnPzb3/4WpvYdwODwOMZH
      glQJhuXctyUhF4oWpvobyzlIkCBBgq1CbAXQ0d2Nt9/8C/S9/mV0ZFLoH9yFdGgbMDa1D2NT
      wLkP34EjhTrTUTYo2jt7MTYshL/jOOovYxyOI7J7CaFIufGllmWJ76iIzKGEgjLmtiNgnFe1
      IYSqHAJ5jFKizucp5n5Hg22IOz4l4O7mSPXtHqOUKPOPbG9Zlpg/IUhpmhonPL78d4IECRJs
      B8SngqiUAe7g62/+KYAMfvqrX0VvqBdObbz/3nvYc+wJTA50ii9T3fiJL/8o9GIOH5w6jZee
      P4G2NsElLf9mXIdCJpNWgrSjQ6ycM2lxLJ1JA1QI57T7XbhNJpNW8fryWDqdUeenU9Hnp90K
      95l0BqmUBsa413cmA8BS/fjbd3R0wCEUmpZCxuUZSmdCfacz6t8JEiRIsB0Q2wfQOzyBnjRH
      3kph79QYuiJUyJnvn8Lxz76MA1OiaHo2m4VjFDG7lIWmaUilt9Zz3AhVdC6vwzC9kCbKOJx1
      6gtwzmNRRidIkCDBdkJLKoLtO3gYK3O3cfXqVZR0YfZo6+pHd8rBQq6C5z/75KYnvh4oY7Bd
      M4ztUFDGQQitySEksozj+SA4R1UUkYgsuj99GQkSJLi/ENsENLT/USz82W/h3JVreOzZz+P1
      iIpgI+NTGBn3fdEtTB9DoxMY2uhMGwTngq5B/B8UzmVdVA1ra2HsKqUclk03TViXIEGCBK1G
      bAWgtXXjheefRveuMbz42ms7MgzUtBwUSgbQ39eyMRjj921UU4IECe4PxDYB5e+cxXtXCvjP
      Xv9xfOOP/g3KO7AMr4jYSYRzggQJHmzEVgBtXX2wCks4c+4CHMfE2995CwurxaZNiDG27Qqw
      OG7oqWE6IITCtBzki0bsft66nsfNnKk+T6/o+Mal1WZONUGCBAkaxgZqAo/ih157EQDwwz8p
      SkO2tzXPpu44oh5A2ldppqxbsJ1u9ZkxBtIExs5GUa6YsG2iKotRxjfEGLpcdjDe6zlNyhbF
      QinhIkqQIMG9QWwFQO0SvvlX38LgrgEAbfjZn/959EU4gpsJ6hZzl3AIRcVoTVKVXO2nWljq
      7EbWwM2sieHu+4xKNUGCBDsKsSUQJxaOP/cavvKl51sxn7oolAxYVvf6DTeBrbA+VWyGpbKT
      KIAECRLcU8SWQIwxfOfr/w7nP/gWgHZ87R/9Qwy0eAcg4fhoIMKoF+N/r7HNXBoJEiRIAGAD
      CiCdacMLn/9R/OhrggwuTAPRLDQSR287FOWKMAVVDFslfiVIkCBBgvUR29BNWQqV7B288cYb
      eOONN2G0SOYyztfNzL2fYu3fPL+Ey0vlez2NBAkSPECIzwU0ug+fffQweob34MSJJ1q2A3jQ
      MF+wUDIpShbBQjFhDU2QIEHrEVsBFO6ex6lbJvTsLO6eP4PVbVYSMpuvwDCDoZWUspb4BzjW
      J5mLi2srBr5xOdvUPhMkSJAgCrHX792DY1i+8R9RLOYwNzCOH2uSA5jS5jhxJfFbmjEVq2/Z
      ZF1zEqU0IMwJpTDtdWL0OVRtSOKGqkoaa+YbP0GCBAm2I2IrAIcAP/2zPwvHKKEj0yEEYBMI
      gZodKWPZBMWyGfiOulnGmlY9YUkg533msRQSd5WB3BVwJNE/CRIk2N6IZQKyKwW8//Y38a3v
      fh+GoeONP/y3qOygRa5tx6d83ghqyX2bUFWbQNYSuF+c2AkSJNh5iKUAOGfgqQ50d6TgOASv
      /+xXMbgDncBidR9f8JYrJmy3bGVNKb/OuHJ3QLmgk/AXoUmQIEGCrUQsBdDRuws/+PrfwZP7
      +nBjLodKfqVV86qLzVbioozDXqfalx/ligHbIcLOv0XJZmWLYjHhCUqQIEELsSOigFiNko6t
      iMKJAqUUfBNVvuTKv36b4OcbOQPfvra24TETJEiQYD3EVgAiCugsrly9irN3c5E0EJZewuXL
      l3Hp8jT8C+bZOzfx6aeXYDrxhKnj0jyEhai/JCMPe3HvI3z94gquLlfu9TQSJEhwnyG2BT/T
      M4b/6X/873D91gwOHXkIKcaAEHOmYRE8/MgjWLlxDtcXSzg22QeqZ3E3a+H5Jw7j5Mdn8MJz
      JyL7l5w+cevGCwUR7xxKKSwraGaxHUc4irdRqbOFooWpgY57PY0ECRLcZ4itAMzV6/iff+OP
      cOzQFH7/938fg319+Lm//8s4MNqj2gzu2oW1pbs4P1PE5z4nyi4WVhawa2I/tHQHwITQdRwn
      8JcQAt2wYJoWOGewbQeWZalj8q+U8/I71YZWt6k+RiGjQIulClazBdWGUoJCoYxKpQ+dnR2h
      86lqA55y/02rxpAhppQEj1F1vud7CLchRPTNOa8+nxD17wQJEiRoBuLTQWtpDI2N4wd+4IvI
      LSzjR3/keVy/s4QDo4dUmxuXz8NpH8QXv/CKWkj3j0zg2rV58PEDQKodANDW1hb4m8mI6aQz
      aTgOxVqhhI6OjsCxTCajTEHyO9UmXd2m+lhaCWn5nWyTTsvxM0i7heO989OqTTqdcv8dbpNR
      yiV8flqd741fNUYmg3Q6+lg6k1H/TpAgQYJmIL4PYPQw/s6PvYSTJz/Cl//ez2H3/ofxwuMH
      go3SbdCIgemrV1HSLUxPTyPTM4K9w+24dOUGnnr6qSZNf/vAMO0k8zdBggQ7CvEzgUuL+L0/
      +BMsLuZw6tRp/No/+SfoCTmCDx97JPC579gxAMDU3oOY2vhcGwJlgpJBAzYUqx8HZd3C4moR
      wG4YlgNCad3ymJIuIi23CRyxopjOzpcx0deOib72Tc48QYIECTagAPILt/Hka69jZfocRjtS
      YNvIWboeKhUDtk3Q0bE+gZFtE5TL8Qu/+88vVcz1G8bAufkyMNWbKIAECRI0BbFNQCOHHsOB
      oX4cmujFAulA3w7IBJY1hSu6oRzOYWRzBRhGcwV2LTiEQl8nA5htsPD8RlC2KM7Ol1G2EhNW
      ggQPEmKL7/LyHMpUw5d+8r/Al1oxoxaAUga+TctFSqzmStDHOtHX2wlA5Dc4pPF8iU+XdYz2
      tGEsbI9rAGWbKvNSzhTRUvuSsNMECe57xN4BtPUM4m/e/Lf4xjf/Gm+99TbMJi0aDdOC44Z1
      bldwSflZB/4ylVuJS8sGVir1dxUf3y1ivhCc2x+dXcFS2cuFuFuwcbeQUFAkSPAgIPYOIJXp
      wE+8/joopUin25Bqkg/ANG2QLTJ52LaDSsUA0N38vh2Csm4B6Gtan2EOosWSjaWyjbGeNiyW
      bDy1u7GxTt8tAnv7k6SyBAkSANjADiCdYnj729/Gv//6t3HpzOl74gS2bQflsu4T5PHgOAQV
      feP2fkIIDLPxVX5Zt2ORz62HpbKN8wsVLJZsnJmLriM8nTXxjWsFAMC5hXKAWO78QgV/eGa5
      7hhvXc/jrev56L5XdEyv6JHHvnU1h29dzTVyGQkSJLjHiL0DKC7cxMRnXsGuxcvQbAMGBTq3
      yBFcrhiwbUdF6AhBvvFInUZRKumw7J1L23xuoYInJjfXx3zBwl9eWsWPHx/BNVf493ak8Y1L
      q/jc4V0oWxRHR7uaMNvW46+nhYL6wWND93gmCRLcW8TeAew69BR6i1dx89YtdB98HLu2QPhL
      wV/x8/GHYFq2omvYyXAIqxkhlC+bMO36fpKlso0Li80jjlsq2fiDM8sBP0EYJYvgk7lSIIqo
      3i4hQYIE2wOxFUBx6Q5uLVfwIz/5U/jyD77aijlVoeLy8deDaTmxfQhbRSe9lVguO7i4dO8F
      77UVXe0UEiRIsD0RWwH0jx/E//CLP4+0voBf+OrPI9vkgJFCoQzLvHdRKIKNNCnT+CBgoWjh
      X3+0gIViQrKX4MFEbANOafk2/uXv/wm6+obw93/5lzEUP+x8W0PSUTcCzlGzLeeomXtAKINl
      C0f08mqhxvmbq3rWKAzLAWOdDRWt2em4vZYI+gQJ/IitAHpG9uHnfuansbSaB6gFhwPt24gO
      olIx4NgO2turNZOsGaC1YL6NKI5sXocxIhK9rHVs+cD69W1EVkLjQrtWS38tHWuT0Uq2a4ZL
      teImbxJ38okCSJDAj9gKwFi+hn/+e38Bu1RGT283fun4o62Y14Yh/QV+BTC3sIriRJdbkJ2j
      kWovjDI46/gd/KBurH5qg4kRtkNEIZoISBK5ejBtUbM4SvDSUB4BZUwJ6jCkAqCNmMEiirDJ
      cNfO9u3LEUK3eVZ4ggRbhdg+AGIZePjplzE20o+RjgyM+/RdYoypgjMSC4tZlDZBENcsEMJg
      WsG5WTYFpd6PQSiD4e4yKA1WS2MxaCY4PAVEKAMHB2U8IEQ5d+k2Ip6FhaKF3/v+Aq6t6veE
      b6hsU1xYrKBse+MyxqsS6xJfQIIHEbGXaQP7PoPPd6yhsq8LM3mGoRYt9GyHoLIJNs1SScf8
      wgqAR9ZtCwiBfz/ZwAnlMO3NC1vuCn7GeE0hH4XwjqVsUZxbqGCir11RVhwc6tz0/GrhG5dW
      AQCf3dePi0s6xnrvM2dVDVycLwIAdnW3488vLOP1x8awe7B19znBzkZ8E1B+Ef/yX/wrdHV3
      A2jDiWdOoP8+eLfi1BSu6CZWVvMAJhpqb9u1zTtxoCghYtZL3m645TpjW6kAGoVwft/rWTQP
      ny6UAAAvHx6u2ebN80sAgK88Pr4lc0qwfRG/JKRj4MmXfwyvf+nZpk7EcQhYE4Tk/QyxAq8v
      rSjjTaWdaCXKFsX1rIEjw13o7Wi9Vouy/Ye/ubokkugeGu+partZXF4qBwZ9ZKK36WPUw5+d
      XQQAaM0i8Eqw4xFbARCawvff+Qtc/eRtAG34b3/pl6p2AMTS8f53/wZ7H38Vhyb61fcfn3wf
      fbtGMDg8jvGRwYbH5G6Yim07oD5HJ+NcrazlsZ0OQiiMe5gHsZWQNNScc5yZK+NHHh7CZH/r
      iOoacWxfXRbJa81SAAtFC391JYcfeXgIV1zlIrccW6EACibBnZs5PDpZTRg4lzfx5xeW8cy+
      AXx0p4CvPJ6Yix40xFYA/ZMH8QMvP4s7S2sAotlAC4U89u+dRMlPacAd8HQPHnroIfUVdakb
      5F+ZgMUYU7Ga0hHLGINtO3AcB+l0CpRSUCpCLwkh6phsK2Pw/efLv3LK8ruoNlHjq/O1eudr
      6/ddZ3zLdmCYNoolA0srBRAyWXV+uK+448vrJ4TAsBxYtoOiS7Mhdxjyr1Sq8n4yStUxxqh7
      TLShjHrtM6nAuF5/NPBv0YarttdXhQA+MLi5qmdqju58mG/3FL42xr17I4+FAwA2Cv99V7u3
      Jo/hh7o2d9y8buPDm2uY6m/3jY9AG6Z+v+rAhwT3N2IrgLWbZ3A1z0FKNnb1pdAesXMfHpsC
      9CxK/i85MNjfhU8vXgBNdeLx40c3PutNol4CVxSaZcOX9mbOOQiyxbJgAAAgAElEQVShIo5/
      EwZoFtPcs5bXYQx3oLuzrea4RArFOvdHCVJUzz8qizqOnf1GVkRZXVsVf790ZKCxE118/aJw
      /srazJyLymrr3efwHOU8Dg97BHffvLoGADg60uUeq71afuu6SPB7bGJ9yvGyTXFtRcfR0W70
      Rr1QCRK0CLEVQGdfP3o6+7FcPoOrCwwmBRoJ+SaEYv+RY2hPcbz/wSkAR5FOi4dd/k2lUt5f
      d5mdyWSqjgXa1WgjE6Qiz9fWPz9VZ3y5A9B1EwuLq8hkjvvmptXsm3ORJ8C520bTwDlHJpOB
      ZdlgnCPTwLXJf3MuyOP8baLG100blHV786/RdzqVguZenLzGVCollII711Q6rYRpOiV+N02d
      n1bnS8UkrhvQNA2UMff+iTbe7+7NWY0vhldzbBTyfBnmqqVScAiD5utb6qh02r2nWgrc/Szb
      3MqL3WR/Vzu+eTWHH35oSB27nRcmusmBTlxZquDh8R70u5S4f3ZO2Nl7OtsD99Z/bRLy2gyd
      4vySgT27urFcEX0fG11fcczmTbx5bglfeWIce6TphsvfTwskG6bT6arx06FnLZ1Kxb7fCXY2
      Yv/aXaNH8TNfOQq9dAIGTaE/oofcyiIWCw4cLCJf6sLywiyOHD6A61cvg3GOx58+0Yy531eo
      58OwQjsQjuowS5kI1u4KZcpYU2oKc86V87mBgmgN4X7hWiqZBB/dKSClaTg7X8aPHa8dedMo
      JIHeZH87rq8aGO9rx3zBwkOj3ehzlczlReFM7qvDw84Yh2WTAB2J/Nf9FPWUYHOIrQCosYb/
      6zd/B4tliicOjOOn/qv/Gp0hP8DQ6ASGRr0QycG+YwCAh48f39xsG0BUPP+9iDDSDROr2eiC
      KnERNkE1whMUJ9lrqxEnE3el4uDd2yW8eqAPoxuod1wPjHHYNtkSziXA55do4PrLFsWZuTKe
      mOrBx3eLmOrvwGxe5MVIZ/Iz++OZx6rmg8YiyxLcv4hPB+0WhHnkwLgqCLOdIOL5G3ugHZtU
      VRTL50swY1T7klhazm2oOlkchCkdosA533FUB5wL30O9n2257ODfnQvWLy5ZBGfmSlgsiQpp
      62YZh3YwnAsfCg/RZDREg9EgGOPQTUflmfivUc6/0ezoK0tlXFmKrgBXC8pPE3Fv5bMisrzX
      95MkuP+wIwrCtAqOQ6DHKA1JCFnXfFGuGFhazm52apFoZLXGebV5aLuDw6OZYBxYT3/dWjNx
      a81E2RJhpEslUQSnYtOwjI8NtkUsrIC3yi9tMmN7Lm/it965rXYIYdSQ/wkSxFcA5YVraNvz
      NH79138dWu4uyi3aAcQVzo2gVNJhW42VdiSEwgzF429FrQDOJU/N1tAz2zZxQ0vj8Io2DmmL
      blSoNkJLfTtv4XYtZs/wMruRMeW4vu8sm1QxtkrlEuZCiho+jiKilKFUsWJHmokdzNaZsBLc
      f4i9fk9lMrh45mM8fWQE07fu4oeanFRYKJRhWjY44zCMjSsAQebWuHZaWsqiXBlRnwmlsKzm
      JGQtLK6iPNlgvVwuYu6b5G8NgLnClbr1CAARreOXZUaNcpR+yAgfFmFCkY5nGWHDOIflUDiE
      bkjIbRRyHOqaYDZqFuNckO8JGStj7F1bfoQA3uxv1khYrxqfVd//wFxqTCbJuE8gEVsBdI8e
      xt/6UgFvvfUO/tbPfRXdsfcQzUMrdgk7CSIJbn2BUdatQElNSllNQWO6OyTNl21tWo4rwE1B
      Je2eK23ofqGj5tOxfQmiCorRtTmZuJxz2IQ2dSXOGIduOXAIg2E6Ab/ERn0UzKc4EiQANmAC
      4sTAf/rGN3H7zi1845tv3VPbInEoDGPrKXwbFbzrIcrM1NB5lMG0nAAVRqvAGIdpkbpCwyEU
      q2uVQNhpRbdR0aOvjVCmEs7WA6EMRd0CqSH0trt920+VzRkX/8e3UgFAQ/6RqPGJ6zuK8m8w
      xlRdBw7g0mIZlxbjOZoT7FzEVgDZW+cx9fQP41d+5VcwxYvINmZSbzl03YxVwOVeYH5hFaWS
      jlJZx8LiakABiDyAaKVimBYcX4p+VD2AfFFXq3cA0E0H2XylBVexeVDKQakQRg6h4Kx2pIqE
      THqLEpxytUzj2v65UMKt9LWI+gnCwR3l32jGroEyjophRy4GeJ1FgsyI93s/EgXwYCG2CWj4
      wGcw++Y/w//58bfRPjiF4Sbt9HO5Ys3VfLmsw7bvnaaJUyd4o2gW3cROgqo14KNhkH/rOdvr
      3ad6v5IRCgCQ4/uF8lbuJpTzmW//nUyC+xOxFMDK/B3cmFnA869+0f0mBZsCrWbylWUemwXb
      cWLF7FNKFeHZvYRp2iCEoq2t9s+mm7ZY+Q+1jlVzK+CvbhYGqXOsHsIKwBuLoVQ2A4olamVu
      u+GapooOqvYhSAfrRncVjZrGJFq1eSlZBNdWDBwd7UJfR/B5u7QgdgjHJ7eWzjpB8xFLAaRS
      aThrMzg9x/DKU0fx3tvv4vFnm1sXoB503YDjEKTT8Zgis9kCdF9EkXAeNzdpi7or2XQD9Ya3
      EwgRDJ6m5bRkl8M5V1QWTijiqJUouo5exgbXvTbKmHBwRwhfyhhKuhXpeJX29bjV0uqBEE+B
      ECIifMJJcladUOayW0WPMoaKbkTO23bW302XLYpP5kqY7G9XCuBPTs8B8DigEgWw8xHLBzA8
      sQcnTjyNciGHXbsGYVZKuBdsA6ZhY22ttH7DLUSYgoISWvdFvZfwO4+rTCCcB/73fy+vUdbU
      FWGIJNDOIbQpHESB+cbI7r4X4HAja5o4RUnT4P1WHI5D4Wyi2E+hUEGhUIHtkNo76pCHumRR
      nJ4tomRtb/9ago0hfhjo2BH83R/X8eHJj/ATf++/jCSDu5colw3YNkFbpvl2KdO0QAhVLJZR
      oJTBDicQ8caTrAzDQm6tCMcZrhniylyiNy9pbL15C9NRuaLDdvrR2dH4Dko4EYNjVVNAi2I9
      /rnUW2XaMRQEh5eda4cctpyLuHnqux+NYCv9SYxxGKatEuIAkWPSXNRWkJxxwYUV8ZwQQpHL
      l2GYvcjly65DPNimZBF8MltqaaGeBPcOsaOAqFXCX3/7b3D37gz+8j+8geL2XORuGPXoHqQg
      jQseWlU1gno5DioMlfu4+TcYWrge/GGMtdsIBcB5Y9tBuZJljEM37NjZ1ZKvRyoF6hLfNeP6
      yxVTmVGaAcaYqwBEsR/Lp3y4TORqZRQS53AIackYJZPg9N0iSmayO9ipiL1+Ly1cw65jL+EX
      fvCZVsxnS8EjVk5bEfGzFWh0d3AvIVbHbrKTJbJ18yVhu++oU2SinoO4XiZtOBuY+lbnYVh1
      TB6NRGtVDJkDsf7KWbKSxhXSUvG24ncW+R+hvt1/ynBrYR4Su4N61NQJti/iU0F09OE7f/ob
      uHXmb1CrJvB2QENZwrzanNG0viMgbbrhwhxAkxWPCqnc3gpAQmYbR2YUx0TY/OZH3Xj4Ki4g
      xz0mbO+ccxTlzsAXqmpawR1MRRehzJIKoxEoTh/GA/ketSB9LMw177T6d6ZN9m8k2D7YQE3g
      o/i1X/1HWFrNA0ihcwdVsJPhpI28nPW4hIhDNsRTRKlbq1iTdAweHXW9UNPV1Tx0fXPc7/cK
      inOfVcfctxIe975ngqnTuqaZTiSgVdvGAZfnyHLgOBTFstFU2z6hDMWyAdvuRUU3XcI48azI
      Cl5R8Oo011YOcfJNopLFEtw/iK0AKotX8c9/7y9gl8ro6e3GLx1/tBXzUlEn9wrNontoJnRD
      ZDu3tzd3y0UpQ7lixE5Eo5ShVNJBSJ/6TmY2d3YGHc31MlLrQZqJZPbzdjdrNYIdsjFbFypU
      lXNcdusUPDKehIbuJMR2AhPLwMNPv4yxkX6MdGRgRDzMxNLx3b/+S9xcLAa+v3juE3x6/gyW
      1mpTFEhTSCM2bL+S2KiDdifBMKyGTATrwbIcFEviN1jN5mFaNiou0Ztp2TAjWFAZY9ANsRLV
      dRO6boJSilJZDwh207RhmjYsy6kZBksprUl7UT2u4CIiLoOppI9w3PyFim7BcSh0PZoKIQqO
      Q7aMNiTABRT6j7pO8GYWoAmD1XHQ+yO8wlqJo1pRSRpsGQLM4YYRQ1Qpk5XKEuwcxN4BDOz7
      DD7fsYbKvi7M5BmGInooFPLYv3cSJR+1sJW/C6ttFCeO78GHH57C+AvPKyFAKYXjOHAIEcIh
      wHsj/i0FvSSvkucJUw2BZdkq9FC04TXPlyZ4+V3kGPXGdzsol3WsruYDbbzC47X7rtcmPIeo
      8+u1ieo7myuiXOmDYViwXVt7saSr86TpiVGPXE8Kb8vqw8rqGoy9vUoBlaXZSo5BBaeR3+Qg
      q6p5c+XqN5M2bEKEIJbPAaNUKfFUW1p9558jpcxnA2dVf72oKF7zmIyBl+YSjyXTu7cp9z76
      n1FlTpE+ADlvXnt8+Yz6z5d/HUKg+xYu/vNV3/K+RV6baOM4BKWyAdtxqo4x331T5yPYhqvf
      Jmp8+WxUm0SZ73fjofetbFNcWzVxdKQTve07yE78gCGWArhy5gO89e6HWC5YGB8ewOpqAZ99
      5gT6QhaJ4bEpQM/Cn6pVKRTQM7gfgIYoj1K9ur1RdX63EsVied3aAMViBZZlo7NTRH04hG7I
      T8D4+nUMDMNELleA7QwrYZxbK8Awu9HbU7vugBTg9fIYNgLlDN3gb+S3V8tVPG/b2BzjPCeC
      AkIP7Ebk6VHEclJQ+kNvKWWBpbIUrnF2GIwxGIYVUEB14R+fsZZa5wmhWCvocMhgrPNKJsXH
      M0VM9LYlCmAbI5YCePipFzHSm8Y7M2342198Gn/6b/41WIPMBwNjk5i+PAc+fhBICfuwFETy
      r3Ru+Z1cmUwGjInIGdMN2cuE2mcymerz3Zck6lhK08A5r3t+3WPu6jCqjWnaWF3Ng9FJGIaF
      TCbjmkuYaqPVOR/QQCltaHxCKSq6GWjjOBTFko6K3oGFxSwymYfXvTZNHkun1dzCc5Rt0r75
      p0O/l/9Y+PxUyj3HN0YqFf7d074IKU3NKTB+uvr++f/WHj+FQrEcOMa5SByU8tt/vgfNpRHR
      fKtrrtoLga2BEApNS6l5y25S6ZT6G55bOnRvU6l0YC6UMEATCiLK8SuDGVKqv9r31n/fJGQb
      Tf02KZRcCo1Ueih0frrqfC2VAqUMWiqlKCzUs5gm6rrldwm2H+KzgR58HPN//hv43z78T0j3
      juH1iB5yK4tYLDhwsIh8qQvLC7M4duwY9o0WcenKDTz19FPNmPuGEWXfbCW2kqrath2UyjqA
      XVsy3nqwHYKl5Swqe3uxspqH7Uxtybj5gth/UjqGyjoObttxsLy8BsfZu6GxvJ1LKzLxfCZN
      +dBGhBFL5PNCyTkOwcrKGhzbq3In+bC8EObJWFPx7qFnCguHiH79wgoA4MS+PiTY/oitALRM
      F37+F78GQxYy4UCY/2xodAJDoxPq82DfMQDA1N6DaPXrb1k2KKGBUE/DMEGaIICVs6zOCxgH
      0n+xHhyHgm2QAXOng7tOXxFGKmzN1EdAJQMGajlSGWOo6OY9jSgLQ29iprGE2J3Uf0bCuSuU
      MVQqRqTplRCGfNEAoT1e+xhhroyKGgUP6nO7UxBbARRnP8Wv/T//HkcP7gaQwU9/9avo3YY7
      vFaEccbh9InC2loBhmkhnUqhWKwEcg1kjkKmDtVzK8DcKlWOQwK1ZRtFuJCLcqKmatt9y2U9
      9jh+hCmT/UR12w2EUORdnp1Coay+A8RubWFhFfa+/paNbzsEy8trkQlyjFJUKgZ0w8Lc/Cos
      q3oHFJXsluD+QWxp09k3iCdOPIcf++ILAICuberfYZzFWrE8SPCHz8pSgTKem/l8FYFzZELX
      OqRDXkTR+rskQgjW8kXoeh8WF1dh23tQcE03Y2NDG7o2w1y/RGg9c5wcvyMGYV4UrBiEc4RQ
      rOVLIIREhuCGISO1iMzD2EaFhMI7sZk1A3/88Rz+88/uRtmtp3B8IskV2C6IrQBsm0LPzeKN
      N97Adt4BJPAgfRCy6pimaTVzLFRop2vi41zmZrCauwQvIah5c17NFsQ/DsXzZTRSI9ozu/FA
      WLEfphKyYuVOKEWhGIxzJ4QglyuCkHH13dqayH3ZaKSVTKQTOQ6mmy0ugghUiK6rXCilKIei
      mLYSjssm6qf/ltFTHLwqQkqWmoxSAP/hzCIA4G8/NVF1LEHrEFt09wwOg+hFLOXKyLR1blmB
      j2bAsW0wSpFKicuOssHbpglKCFLttVeA9WgiNos4heIF9bQQBoZhgTgUqZSmhNqW0S6AB+Pk
      tynCSk8EA2ye5MBxCFaz+aY6+iljSnHLJD3DJZhLpbei6JD8TX3fyFj/BhTOVoSoJtg8YiuA
      lZvnMf74K2i/cQXDvRm0gHa/ZSCOI5JX2jwFQDcgyJmbQdkKiEIyNioVA8vLuejx6/g3JHfL
      toG0GPHafDv1IIVrudLj2qnHVE6G4xCsrOZh7u2torKQ98cv5GsqKOVD2MD1bQNQvynIRwQY
      Lngvd28y7LMevCxhkZuw4VujFiJcmQffPLcEAPjKE+NVzevtEhI0H7GpIIb2HEK3piHtrODs
      9FzLCiBSSuFY62/nJerx+G8ElmGguLbWcHtB5rZDJcgOQ5hXn1IRzRIZCaQUUO3+OKTS3KLf
      r8lDRZmCosxysrCO12b9SmaNtAEA3bCgG5YKVxVU1cJnJIcMjz+7ZuCfvX0Ls2sGKKOgjOLy
      YhmXXSUAAHN5E//3uzOYyzc/cipBzB1AubiG7JqJ44fGcfzQTwHQ0GwmaMe2Rfo8pXDsoCmE
      ScbMCPvqZumUi/kCrAYciIExKVWrUUn1DHfl1EwzUS6X31BWcasheYFqZXDXQpQpZksF8BaC
      Mw7LssEZh+lSo8gQZe7G+LeSaVPQWdemjGaMqx0tB8fKat49Ur06r9V/8LPX70YjywAh+P/8
      wjKe2bczWXC3I967lsW+oS7sH+4GANxarcRTANnFOZy+OO37JoPR3fuQib2PqIZersCxbWGm
      qRPTfS/szCyGfTvKPNSsRLBKxYBjE7Q1MVS0UjFg2zaKxXJdsxZzBRnjPMDzYxjBgullN5N0
      YKD2Fl5x57h0yvJ35fAKunRu0Im6EZOeH9KnEunElZnADTwLsWLmmbinsrj8elDDN7g6bxZk
      HoE/IayR/AMJyUen1/Fx1SPG+/MLywCA1x8ba2i8BxHfvbqC/cPd0DQNMzkDrxwdxj996wZe
      OLQL37uexctHhsE5x+2sDs55PAWw/9hnsP/YZ1o195qw3eSuMAghVat24ghTUCN2zkahdh6b
      hIymkRQAtmmhVBBRI6oeQB2ud6lI4ioAqThkTWMRm15Sx/xCR3e5hWQ+goyCsR3HXcmyqlBF
      IcCCseKSdmGjaGXcua6vv9PzVrJMXZuSuz5OIEKIqEnsCHPHZuftEeMx17FPlHKQzte2OjkW
      zYLtECyvrME8MOg+I1TdN8piKDfuFbuJVJzuV7YbIhqu5a0SAXeqg2aL8e70Kl49NoJUKoXv
      Xc/ilaPDVW1uZ3V89+qKaHcP5hgbMnonDEop7JCfoBFfgG3ZKJfiCyhSYx6NQhaEiYo+irPL
      kBXJTMPC2poQ5JZlB6IzHFJdtCYOZTZxSMPZ08LM4bT2JXXpFvwjCOFsNSx0bdsJFISPe37t
      qW3O3LGdIaOR1rtHch8gaypzeJnbGwGHoJkI+DAoA6MMl5fKuLxUxnzBwu98OIv5QjzT7U7C
      TE7H965nA9+9dy2L//2vpnF3zcCHN4Wf8v0bOczkjLp9yQWoBOd8cwrgD3/nt5FrLGKxqbBM
      E8V8oeH2cYRrPagook1is1nKUSUpLcsBJVRFD4mqZff+xXAcgtXVPCq66fLtxDOFMe5VFJOc
      OLZlw/bvQpQpxPuNLdOGFTI12DYJZMTKnQsh1DVl7UwBrjj/GUehUEKhUPJMdr4X3jBMGIaJ
      SsVQleg2A+kDilvoJyoYTO5Mw4yoHN7OQdYhaEXtgY9nik1RJKdu5zG7AYf1965nMZPTA5//
      j29ew0zOwPeui2jA3/jOTSXwAWB2zcSHt8TnD27kcHfNUOZUypiiPbfc/B9J9+3PnI+tAOxK
      HidPnsTJkydx+IlnsHjnVuyL3QpQ4u0OtitNQBSkOSHB5iAL2ziOI0jRnNqZuc3aCdTqWwpi
      Sqj7XIYUWAvAucgRoYTCqnFt8rqJQ6DrghNICohGwBrYHcjC9ZxzVSxIglCOUsUCob4iP27R
      mXAfkeNzDtuJNg/N5k381ju3cWWpjE9mSyhZ3ju1ULTw/56ax8czBXx0Rzi9P74bVACzeROn
      buer+q0FKcBP3Sk0HLE0mzdxyh3//evrr+ADqPETsdCuKfpcrnar8SuClZdw+tPbaGtrw6n3
      38eH3/4znL6xEreblkOYh1rzkjFKQexWv8BetEyIbmfHo1TSUSrpnp3bzX3gTNjUGyHIaxWa
      VS1M9uOtxDkIJSCUqDBWmUlsW/aGFFAjiks42u3ICDk5N0LEjjLggOXejsvriwkHfh2/r1ph
      uqG5DiHCBxB3Acars7RlGCkhDIQw1/Qmdvdvnl/Cm+eXqropWRRn5kooWxRvnJ7HG6fn1bG5
      goWP7kRbEubyZtWxsJnl1O08fvu7d8SxkACfXTNw8lb9MPK5QvUY//hb1/H+9ej8HxEo4d0Q
      m1BU3ORA2yHr7sQ4DykHvoFEMKQyWFvLYdeuQRilMj7/ystYWSsBGI3dVYKdjahkoziQUURC
      ATgu3YQwjeVyxXXOjkapvDnTgOOaiOQ8KBFJVpQwRQ9hucpfErw5NlGr3FJJbOPjUEH4nei6
      LoSIFNyUUuV8l4qp7F6jFz3U/J2LDM2lKtKr/m+cdak7hnYJYjuZmxHNNBph/nSfIekE949v
      Wk7AiZyuw8b7xicLAIAXDu2quWji3C1l6XtubUc483/z7dt47sBgJOHvBzdyePHwEDjnmMkZ
      aPcVLZL5DjIcfDZv4uStPDgHPry1hl/64iH807du4oVDu8Aow/euZ/GF4140E6EsoKR5zEx+
      x6GK+dZxCNKZlPJ3STOn7E0x62IjZHDDB/F3f+JlfHjyI3z5Z76K8V4NR3ZtDcf7TgKNyGPY
      LKSNNKo4yGYgnZiNrtL8FbHCCkCGeKa05sxR7hKkU9sv7KRwEseslmdASwr08O33+ymaBc4Y
      bNsGcek+mLs72mlQGdjcKzPa1SWq5jFGoRsGGKNqZRummWDMCxWO7N999mT4cCokuSnlKOs2
      KPXWzrIes4jaiv7NqFuDOgozOQPvXcviCw+PKh6kOOGwErZNUCp7obVhVttaryOlNBbZYBiM
      e+HGsRVAZXUGf/Yfv42ewWGAUQyNH2hZNnCrIdPd/aAxQj6JbcOsBFecnFJQ11kszUTN4JuR
      c2M+x02jlBThCCFKqVodyFKcUpDbyvwhq2aJVT6ltc0NMhyS+2yLXGuOMFS7BNepTRlXzu1q
      J25jv9tmcwW2GyihKK2Tx9EKMMaVcmpF32YoskyWP+3vFYlMkVnedRYx9d5C0yZiFR4ys4Tn
      FFjsMK4qoUnISD9omuqLKSUlzTS1/Sze+JrqT+78ZF0MSpkbWutFE1LG1l3AyTByGSJPKY3v
      A+gbO4Cvfe0X8cSRcfzj/+V/RW4LA01MvQJSx5kXF5yxqqiejUYMGZVKbb9AVNgDEKBljgO1
      UvAlDskYfw7p5W9SPQSpZOq9WD4FULuRdMZvfkoNIWJBpusGdN0AoVSFKK477x2Gek5c5mbY
      y3DKKJRKFZRK0WY0y7ID/0chXygjXygLwVcjSU3a8qXJJCrUk3EOy64fWuuZp5iKcgnD7ycg
      DgNxmBqX0moBLncr0gd38nYev/nO7eD8WTXVPHVNOGFB7H/1pZkJkDsjv58vaJ/3L9IkCGHr
      KlvpJxCkkkI464apIgflgk/+jV8QZvEmfvePvo7PPvcyfvf3/xXaa/Qwf/c2ugbGsKu/2/tu
      5hZKho3B4XGMj8QrMr3V2Khwrocw06hYMYsxjEoZjm2jo6t2Uffg3Oo/CP5t3r2EdFRStbXd
      GmGrtvvKTFWnLROhpc1I9qvqm3MQl4qBOH5zQWvgmQ84KCHgjIESIpyqrtBqxDonnbheIhqD
      7Zpwot4Ludhob3c7d4Vb1Graf5/lc7yWE/ksA4Prk8BJ8wdjHIZbJ1w+68oaIZ3R3EskU7TV
      XOQYCFs4U/NnjLmRSF6menjcAOGgzxRDWdCn4F/5e19yd16aitYJN7HcnUg9q0pUpKBaAMqI
      kTod+GlqYu8A+icO4Wv//S+gnazht37jN1GMWJBfu/AJePcQbl36BGXbs7zNLWXx0EMPRQp/
      SQHB3ciDOOFoAOBYFtg6NtJ6NBNbCcpo3bDE+x0y5lusxKhKjuPwVqkbRb3VbSOglDbFlCJD
      Pv27DBnhJGPdGedw3GcyvBJuFrgr+CMFsVQSciESWIF6dNSWaW1YOTo2Ufkf+UJJ1WpuYOLg
      IZ4kmQcQJgP0g1AWKJDD3fbryRLJJRZeZddaCNbqrlQ2YNtECfcoevco2WaYVqSPhxCqihxl
      c0Xorq+LEArHFlThQGNJnuEoothUEOWVGfzu//cGGFIwVpfwc//w19AfwQa3WrbwwnA/Bpwx
      3JrL4rGDIwAzoJcNfHrxIvYcPIKBnk4lBB3HASUEjm2rF0XCsrzCHABAKVGXQN124TaEECVE
      1DG3LSEE0ndPQm2or41/fP+cKKXQ3AeChsegFJqmRR6Tn4l7PnFIRBsCU9ehl8vqb3hulBAw
      1wtJaPj6CTRpOwzdG//5co7huTmO43vRNfWd/14JgcVrH5OEL+4f2YZSoj7LMWzHFjZOVyg6
      tg3HnaecY/QYwfGlTd9xnKqXwP+MqRebh+fvzU1+J6/Dsi1h8rAt3zW4x9x4fscWoZS2S2QI
      QCkh//icyyps4Wtzr9/xTCsyht+xLFiGAcuylPlTCiTLMrRdZXcAAB0kSURBVGEZRugag+PS
      iN9NQ7CNfLajflsa8dvKMUzTRLFYgWma6jfldccXxypupJNpWqhUDLHD4J4p03++bTuqjeyb
      uvfPdp8X27ZRrojoq+6uTgDC7JFbK0MfbodtO264K3WPGcitldCf7oFh2VUyQtBe2KJKmzPo
      OqItmK7pS0Z4OQ5xI9gsWJbjRYdRggxNBa7f/67JZ9swDJQruujbtGBalspW19z5hN9x6pNN
      Uccs93oyLqWGZVmwbeLtVAgFBRVhyoTENwGl02mk0+0gbW2Bwut+qJfXdtAmC6ukuvG5L7wC
      cIbvvX8SL7/8ItrahPaQf9OZjBpDoqOjA5ZpqJc2nc6o47J9R4eIKsik07BMM/qY+zmTySCV
      Tgvt5/Yj26R9baSG7ujoAOcc6XQalBKkUhpS6eA8/ePLaw8fk58z6bQqKl/dRswtPH9CCDRX
      6KczGRXpkEmHrz+jtn7h61f3NpNRIW7hubW1talxZEfyt8n42nD3oc5k0nBsW0UltbW1qegf
      /3fy2sJjRPUtz5MLpEymTTirUilQytCWySi7cFsmo44xJo5poRAd/zOWSknHdvjaMr427vy1
      VMT5nnnDfyyVSoESop4xAFXX2NbWBs3tUz4jUfdGjpuR1+a/764A1LTwvXWf50xbxH3331st
      cm5y3v42kedL21Gq+t7KPr3Fs4Zcdg2M76+6f5bLippKp6DrJlLplLon0kwm+9agoVIxkEqn
      vd82dP/9fctMb+/a0r7PPHBMXmtHR4dwjmopFIplENKn3hdoGiybCDlkOSJ00u1TPpMdHR2u
      vV4DIRQpLQXHoVjLl6Ht6YVDxPkV3QRjHJoGVHQT6cygGh8Qz6HjiEVcJiOflRQchwTfY87B
      OVO/e9Q7ns5UyyZxLK18AJl0Jp4C6B3dh3/wta/BMSs49cH38Mf/4rfx3/yDr1XtAg7tHsXp
      cxdhlkt49oV+TE9P4+DeCVy5cRdpjWHXaJPKvjVoJqJhfqAaTtl1+6Fim7gFXFzBcV1brjRz
      pdo2R8ItHgBvhSbsu5ZnL4YnZCSEDdtxd0OeDdaxhe1c2h5tSyjgTNvmauqqcWVlKnf7L81G
      4TabKlqSQGGj/glJLdHfH7Lh82rTQyPjOi4Znb2vT30nCQwHB8R3MkIsEFzgs33L73lERICs
      V1CTEsOVLaLqXtA04zgEeg16dmlKSrtV2+oXb/J8eSLCzxfirMJ/PXt9vYJKjbAdSFJIuXC3
      HWcDiWAA2jp78PJrP4SXX/uhyONjew9jbK/3+dixYwCAxz7z6EaGq4IMsVQxxlHwKQcpQO83
      +AnfZAJKOA4aEMVtqOPAtizPzOU6kcJRT3IbLFeejDKYugFKCKjj1I7KCP0O/q3qdoNnrvAc
      tAkEAo5MKQSlD2NDfiuuFgfqfazzLobzADwnvjevnFt3mbIRFQXkd37L88IhnbbPcRr+xZeW
      11DZ168EqWfKrU3NwjhTzKjK+armXTuIRIVv+u+JjyhSKga7xrj1sLy8hkplFF2dHSopcXU1
      D10fUT4dztMwTUvsAmKPkACMEjh2dPxrKxLAwrAtC5ViMFPWWwG4Zg7fat5/HqV0wwXLNwLO
      hW2fEgJDN7bMCS+ryXHO3J2LV/5TCRNXuElW2ZYkksnoG87BXJtt2EzVTHi7MwbbZ5sHPLt6
      KhVOtmJwbEv5KNyJewogRmi03cCzryJpeLXgDK+W/dnmjUwhvNOglKFcDlKeS0SRKoYhIoOC
      75E/xDIMIWyH0NPbVXMHESdE2z/HSsWA7RA4toPl5TXY9gTKZSHkZa6MhG07qjZHGH7HdKIA
      Ngn5YsiVNGMUjmMHkjS2EsQhMN2M2a1ODGoU0k8jVuCCE6dSKgf4m5TvaJOIG+svBViXG47L
      lZkrnnJgcmUILwpHhWHKuTEGy7RAHQdmpQJGmXI014Ns41+dq2NOWNgwWFYNMjhKYVQqXgBG
      bC4icW/8ilOGiqqoJ0obopOWgqzLdeJyN1bfL/WrfkPu5aisubuC4WFRQcx2HCwtrcHcN6Bq
      XkihbdsES0s59Kf6lXANJ2tWKoK9FphU34nV9RC63UxmBNobsH07pHoC2H+OrPudzYoIn1JJ
      h2U70DQh1MMKwPFFPzk+E5bIiI/3vtON5AEk8OAP5wrb4PxZxkZFJLBJX0QqYgXO3ALcwBY7
      GO4h6glnyeQqzTSMMeWDiOzH5eNvFkmfLDTk30FYrrlNmgc4Y8K8piLYmDd+Hb6aelBcOO4K
      nhKi/DPKbMe9FXSc1XkrIQV8+NkWVB6CaE5GOLXHUO7+amkS6h7x6kQyyUkkucmkfwjgVeGY
      UVhZyaOiD6loOu5L1pIwDAu5XBHlsoHFRcHV71X9E/4GKZz9imBhIYvSgUFwxoRyOVbNn1Yu
      67BtB+lUqiadez3zkvSXcc1r4/gS0OQ9kc9MogC2EPJlZW7Be0IcmIZY+ewkyuqthFQSckfl
      p6uglIqdg0Puu4zeOGCUoFIqKhPT5vqqvYr07zyqz3MFTB3zotwdUOIJptWVXMDGLn1awsFr
      wiFEEeV55TqrTWhyTlI5C/OS2EGEKZJllnL9x6XacRz2DwTHr2ourtmp42gOzz/ifL8C8uqe
      e0EP8hrMGnkE6yFRANsM0nYvV35+VEUz3SPcj5WvEghIBcAYF1FnlCozkzzWigxzFeLq+kck
      zYP/eZfmwZSrAPy1FpTwrJsBK30/1UpMCtCwkK/oBlZWBK2zjMLhmiaii+rUcGa82gTrr1bI
      OXczemUbIdilM9i/gm8WTN0AcRyk3XKvjmU92ArAT8WwnWGbBihx1A4iagUiq5VFHZNQWdY+
      DiTHtQ8LExRUpEdGvStchYpKM4dyFrpCgbmOb+576GukiGwrKPPAA7pzqAfpvGc+KonqNrzK
      LBcVuSKd4PUghXMjz42s9CZCOetn+UrywChh6rfBhzNpG3EQN0LJEn3i5h454lKEE8eB4SbV
      ybK5+WwOpmEgncmgkBd+kWK+AMu0YBoGCCFwHAf5bA7A/u2rAKTN1w+PS6Z5/KPhh4cxaYvf
      3hynHMHCNCrUNZXyTE3SBuhmqEqfRSOKj1EvYmY9gjwlCHwvA+NyJSls2cylWNgqM42M0pJ+
      gVr+AXk/iGOHomCaA7+fQ5pJwqG6HK55oRmZDDIMkjFYlglKKQhxAmGcbaE8EvmsxB09GGEl
      BH/a7ZtRCr1cCji1Pa5/ORL3vdMCthsgADknxpUCqhfUIB28MsKtutgOVz4IcayAiZ6hqn50
      N1Ze7UB8YaBr2TUYhonunu6I83Q4joOlxVWUyxNob2+vsuHLXYZMPPTXJi+sFWCaFizTdHcK
      KRi6CdMwsZYTVcOEIDcBTYNt2SrgAxBJtxvZmW1jBUBVSJuEzIOIXOT6QvtqNapnZ2chGugo
      BbQToFb323h3o+iYOVfU2dLMIAVJKl2diNbYSnJzkU/cfYm4NGVzKBODyh9Qc2Jq52VbIuTS
      c+J6cemUErXlF5N0k4SocCIzd4cF7kXxBMjcKHF3K0ETjBh/nQglzqtW8IqBEjz4rGxCOYcV
      QCNt5fwipw1JJudB+RmkmZ/DLWPp0SGkM7XHD1cI9DtDHccBo6Igj+M4kYEaEoZuIJddg2la
      yLurbHGej6aBEFVuU/o1LNMCJRTEdpDPrQHYX9W3aCPoXowayWZxIWWbknEqx2Eb5QFI+5oI
      oYyiaI5ZeFr26f9OJllErCbCq1y/AiLu9irBFkKuZF1ThHqA4VvJc2/1alsijr1ZdtO6ZoW6
      jlJZmGRzNjBlevMpvloJVHFDXeuhXg6Lurd13sUwIWNUqGoUKGl8seV15UX4RLXxB10EI/R8
      0VNKAYQiZdznTZpbAE+QanWUQ3iRSYi3So9qKxeZtbJ8/Tt52bdkBfAfkwsRuQCmhKjdlJdc
      5tV8VqbemleyxaiXLF4VYolIh3ntvn3hmgACNvA4kHa2VGrb3LYHGlFKPkGTwOV7x9QOxtsB
      1VOOIR+ATwFIIS9X15RS6OWya6ZydxCSC0qGwTqOu0vyciQkF1cUGKs2XXIWLMJSdzfpb8OY
      omQIjOFG8fkd4+FFomIr8AlpGdaraZra9YUjd5hPMXGfwJZz8s/Y3/dG2Q4eCEnWbCHBuadU
      PPZH6lHqcoR+uCTEM8HOhLdajjrmOYGl4E27iyPFz+Q7T+YxpOosvvyrXdsVsup8V1jWE1px
      hKAMXgDi0cmnfEoqvJCUglhTpIbVfGXr0URwzjfsgbQsE4QSpFJpz4LhyHrbDqhv/pTQna0A
      ZPnFeza+7wGI9C/4NLdcgSjFEeICaSQPQJ5bL9InQYJ7ASnQlHFE+Uyav/CROwFKKCqlkrCr
      S5OG64NQmciEQJdZ1sSXpexmoBMnaPLy82X5dyCAF8ZZryY3o8Q1RaLKh0iIA8YoUi6bpN9n
      JGla1DW6YeDEtmGUy4G5MUahu9URTV1SQehwiCMc/4RAy2g+entHmbQZoypAAHhAdgDbDfKH
      9zuh1DHOqn0gEVnGm3Xw+reVnsPYq+nLUj6+FtdByDhTESvyoFfAx33ZVb9a1Xisxkpyq9Gc
      Cs07D0pItzDZPFyMhzPh1+PqGQHqZbv76zVHrZ5rQa521XsR4fz27O21s8qVmbfOTXJsG3ql
      4vJ+yfoFdkCAy/BZv51ffqaUwdD1gAnJcetNVCpl2C7FejgPyLFFXkYzAxRbogD0/DKu3F6C
      lkrhyccfVfO9eO4TaJqGkb3HML6rpxVD35cQL0LgG8gsR/kQ+5PEJMGZJESTCkSsABg0Tav5
      Ynkx/infd9yzt/tO475j/rZAMCPT74RSc0cwCsNvLhNz1gJ9Ro0ffQHhjzLEkSvmRuWg5b7A
      ALd+rbIzu0KKw6tMxULOT//1q/sgrwN+BcqhMlMBBPW7z97ruzde9JFbP9fXt6dkq8NHqb/z
      iCAIAMGVMCGqPm+r4Y+4kfOjjAaeY0Krncgyx2SzEV71UCvQw2+ndxx73VybqvMp3ZJoQvmO
      ycCBgH9A0akHk9wIJfFLQjaC85du4MknH8NEl4Pbq2L7ZOXvwmobxaOPP4mbVy60YtgEOwRh
      x1bgGBO7kKrSjj5Fo84PO/q4DCbYvDTjjAVWk/65RZ9QfW0NjwVPuXnnu+ZCqSQDildeoxcr
      X2tFu1Ew7jKEqt2niEKiTJRMZMybb3PSF3wJho2e44bGcnfnyn11dmWIrBDAUoH4FX00w2h4
      t60S4QJz5SpfSK76pe3fsqyaTJ9eprFQZn7lojh8VDiu+wxELDwIIW6+gAPT1NWc/IutsAJg
      8v66StdxTV8tUQBcEx0PDPSiWBD2q0qhgJ7BQYj9y4O5BU+Q4H6FFK6y3rGEchQzJZlbPJP1
      YwTrRQFxHtxR+c00ge9cRagUQKigi7K5R9DDSwXCWDX7q1T6W4WWKIDONKA7DHOLOUyOi7Jn
      A2OTyC/OgVMLSDWH6jdBggTbC4xTlQUeRnh3xuHutFC9uxLmDOIFTsi2jFXvDiPHcvsMfMkg
      cxjCpkuHOF5hGe6ZfqLi8DcKucqPQq2+/UrGf3Ge6RG+6+GRO4DwGOoYb5ECePLE07h97TLS
      A7sx1tuG6elppLuGsW+0A5eu3MBTTz/VimETJEiwIxCxSm9gd6BMOL5uGJWh1+J86lKOeOYp
      1yyEoOlMmo/CbAOqa2X68eYqdweS6I3ziChAKZBdoji/X0ftEnxmKo9yRbSVGcle4pbXRpmQ
      IoJHvNvoXnNEmyjl0BInsJbuwPHjXvlHWRJyau9BTLViwAQJEiRIEBsar6FK5ufnt2wShBBc
      uLWMiaE+LOZKmBjqA8CxkC3h6WO78cn0HCaH+7CYK2NiqA8a4P67F4u5Mp48OolzNxYxvqsX
      S7kyxodEYeqltTKeODyBs9cWVNuJoV5Ag+prKVfGE0f8bcT4nHMsZIt4+qE96tj8ahGTw33Q
      NA2L7jiL2RKeOjaFM9PzmBgWxaoXsyVMDItreeroFM5em3evTYzPZZuhXjWGvEYNmpqDvLYz
      7vlLUfOX13hdzBHhe3NkUs1/we1X0zTvuq8vqH4OTw1hISu4TWRBjImhXlyfy6lrPbJnGIs5
      UZx7crgP1+dymNgl7tuR3cNYcI+Fz58Y7sXSWgWHp4awmCu7x3rEMXeuR3Z7xyQmhvpwYz6n
      ftvDu4ew5LYZH+rFDXdu8thiVowvN/hyjkd2D2Ex6/at+fqey2F8qAeLWTF+1fyHe6vPdzE+
      1Ivrc1n13B7Z7d0bef74UC+uz2bFfXPnJsefHOqreW8nhvpwfXYVE8N9WFgt4ejeEe9899om
      hvtx7e4KJof7sZAt4ujeUdVmYtg9f6hPHVtYdX9bTVNtrs2uincrW8KRPSOB8a/NrmLSf342
      WIZ0cri/5rVNDPXh2l3R90JWzj94/sRwP67NruLonpGI362/6t5WPZvDfdXjq77FsYnhXjH+
      Hm/8ieF+XJ9dRW93B8q6HXh/F9x3HJr3Hks5dPrqLCaH+wFwLKwWMTU6UHVsMVcS53NgIVvC
      5Ih3/sdX7mJqpB+AJsYZEb/biYf24PSVu5gc6cf8ShFTI/3QUhoWsiX1+4k2s5gc6Qc4x/xq
      QYy/WsSJh/eqvueW85gaHYCmaeqY13cBUyMD4ADmVwvYPTJQWwHcCziOg7a2tiqbVzqdVsfC
      beod247nx+n7Xp0v//p/k420Sc7fmXN7UM73vws77R1tlvzaVgpgo1gvO69R2LbdULm6ZmTj
      CpufVkUNvBE0Mu9mZRAzN829GbkoWzdvYTtuxjNCHRvItCNdZ0rildI2WhXS39MDP+9Gn5Fm
      zLtZcgTgsG2C9vb6zKjNfCc3Ou9tmQn80fvvIF828fQLn8dIfwrXpudx9NiBQJvZO3cwuW8/
      ps9/jArRoLX14MTjDwfalHJLOH/5GijlSKdTGBiZxGceOhRoszBzA7dmlwAAS0tL2Hf4YZx4
      /JGqOX1y6j2UTY5MWxuoY+Lhp1/EaF+wOPT68+a4c2cGe8YG8N1TF9DbmcKhR05gZKCzJfPO
      Lc7g/NXb6GzPgDCO9u5BPPvUo4E21MjjnQ/OgPIUXvvi51C4Mw1MHcOw752zi0vI0gFopVnc
      WlwDcRhefOm5QD4npxZOnfw+HMYALY22jh4898yTVYriyoUzyJUMNe/Hnn4WR/bvDrS5fuUC
      FlbWkE5nwCjD2N6DOHYg2ObqxTNYWM5ifP/DeOTwHlybnsZR19ckcefOHezfvx8fvvc22rsH
      MDAyiSP7g16oRuZtFFZw+uI1pDSgsroEDE7h1ZeeQ4fvBjCngu++ewrtPT2A48BiGj7/uZeq
      oiyaNe/Zm1dxe2EVnFFoWhoHjj6CPeNBfvtmzbuRZ6SZ827kGWnWvJslRwCKj97/AERLAyBY
      Wsrjpc+/hrFdvYFWzZEjTZw333Zw+JUr1zhnhH/nre9wh5p8+uqtqlZXL13kNmV8+upVzjnn
      ly5dqmpz+dIlznyfo9qsLc/z06c/4fmSofqqOSdS4mfOTXPOKvzqlZkNzJvwixcv88LsNF8o
      U06sNX7l2lzL5n3lyhXOOednzpzhnHN+1f3sR/7uDb5QItwsrvJ3PviYr966yletYJvS4k1+
      e6Wixrl79RIvkmCbwuw0ny046vPs1Uu8EGrDOed3b03zM2cvcJuwTc37ypXLnHPOv//+d3m2
      ZEb2dfHiRc65w6evXuecs8j72Mi8baPEz3xyms/Mr0TeH845X5u5yhfLlM9fPcsXy5QvXrvC
      15zqds2ad/i7qDbNmnf+7vS6z0gz593IM9KseTdLjnBO+aXzZ/nl6ZuccStSZjVPjjRv3ulf
      /dVf/VVsK6SQy61iaGQUU2MD+N73TqF/eBzDu/oDrQYHevH9jz7G4tISVldWMDAygV0DfYE2
      vZ0pfHT6HJYXl3B39i56BkcwPBjsp7OnD5MTE7g9fRHX7y7j2JGDkXNamLmBWzNLSKcJpq/e
      xOHjj6KzLRVos/68UzDLWdyYW8LMjZtYXi3iM489jHRoG9iseXdoBJ+cv4i0lsKNmzeA9h5M
      jo0E++ntwfzdWYxPTqGT6/jk/FXsO3oMnb5VYnvvIGavnsX83DzmV1dhp7pxYCLYT0fvAK6c
      OYWFpWXMz82hxDI4NDVWNaf+wWGMDvXhzCenUTAI9u2pjgvTC6u4cu0GNC2FmzevYWBsL3b1
      B6lDjFIe7b2D2LdvD86eeh9Oqgu7J4LjdWgUZy5cxsLCAlaWF7H3yHF0dwS35Y3MO51px8Tk
      JMq5eZw79ymmjj6M7hBVTEdvLy6c/ghllsHa7E0sVggeOrC7agfUrHlTs4yLl6exuLiAmZkZ
      TO0/gt6u4EqyWfPu7O1b9xlp5rwbeUaaNe9myRFAw+j4BDpTBKc/OYNU5yDGRwdDbZolR5o3
      721oAmLYvXsvNAC3b9/B4OhuHD20u6qV6XC88OKLMEo5fHzmU/T3h38QgKc68fwLL6C0Mofp
      O/Po6qou5WZUKmjv7sHE+BgKhoPZpVzVlhQADj10HD093bhw5jR6B0fQ3xW+dRSVUgWUcXT2
      DuG1L/5AxLVRZNd0PPP8y8ikatv+Orr7kAHDgSNHcPPKp+jo6Kq+Nmrjo1Pfx+FHHkWxVMHM
      Qhb7JocDbXoHh5BiN7Dv0CHcvPIphodHqvpBqh3DvW347tt/g1RHD1764pfQV2W61DA5OYVs
      vgzONBw9fCCinwz2753C9K27gJbGsUPHqtsAoI6Js+fOw7RtdPX2gnJU2aV37zuAldw56HoZ
      3X3D2L+7WpHsPXhEDowXX/0ClpeXq9oMjE7ihdFJ9Xl5eRnoD93LVBpdHWl0Dk/h6P4p6Pks
      dIqQoOS48MkpdA7vw5e+/JMwClno6eFAGy3djt7ONDqHx1U/RlU/wK5d/bhw/gI+c2wfkO7A
      sWNHq+adbksj3daFV196CGfPX0ZbppqYbGLvQUzsFUp/cWEB40N9VW0kdu8/gv6u7kgSMS3d
      gRdefAkAUF5ZAHZNVjWzLQcHDh0EpzZm5pZw5IkTGIwwb2e6+/HC889jafYmrs2soLe7o6pN
      39AYnt97ELeuXcZqvoLurs6qNpVKBT09PRgZGsBqvoKS4aCvKzigpqXw+JPPoDPt4PTZixgb
      Hquat17Mw+EpcAAT+47gh/cdQRiL83PYf/QRTI3uqr4gF428jwCwePcmZnMmDuzZgztLa2D8
      AMKv+ejoMKycifHBDpgkFSFHgL1T4zj5/nswbYZHHj+ByYi5pdu7MDEyAN3Qke7sw77dE1Vt
      OvuGMDbQhYVsCW0dnZiaGK9qsw1LdxPMzy3BzN0F+vbh2O5e3LibrWo1PzcHAJi+MYOXX3kZ
      c7euV7WZmb2LtAbMLufw7DPPoJRdrNvmuWefjWwDEMzOLqC0cBN9e4/j8YemcOP2UqgNRQoa
      PvrgPZz8/mmYTlQ2ZCNtgOvT03jss89j+sJZPPHMi5FzCrR59qX129Toxyos4U7OxsvPP47J
      3Qdx6ewZEB5us7huGyM3j2WjDa+88ipeeelFLN+ahhGRrHnp009x/IkTeOWVV/Ho0d24dHm6
      bpvjR6Yi23x65hTeeust9f/l6zMbalNevIW+fY+D5GZwZykPwxXctdrMLBfWbVOrHwC4fXcJ
      TzyyH2+9+zFeePF5zN2+uaE23/nGn+I777yHDz74AB+ePInrd+aq2pSWbuMP/vhP8cEHH+Dk
      yVM4+eEpWLR2mw8/PIkPP4hqM4cSAW5MX8Xxp58DzS9F/rbinWRYWC3hxWefwPSVq1VtZmfv
      AqCoWBzPfPZpzN66saE2hfnbKLE0rl+/haeeeRY9VEc5NG8jn0emDXjv3Xdx7tNpRCXh6jZD
      ZeUu3n33Xdyaq15EAI29RwDD8pqOR/YNYjbn4MTx3bh+O9xfqM0j0W0ufHoFz7zwMvbsmUJl
      5Rbms3rVaDPXL6N91x4c278fx47uxZkz56va3J6+jIGpI3j11Vfw3IkncPnTT6va/P9tASXj
      TT7LTAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Top 5 Countries by Year' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Top/Bottom 10 Years Dashboard' width='384'>
      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
      Uf8/OZhirQGVHpQAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
